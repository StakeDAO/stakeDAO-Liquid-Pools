{
  "contractName": "RTokenStorageLayoutTester",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "conversionRate",
          "type": "uint256"
        }
      ],
      "name": "AllocationStrategyChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newCode",
          "type": "address"
        }
      ],
      "name": "CodeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "oldHatID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newHatID",
          "type": "uint256"
        }
      ],
      "name": "HatChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hatID",
          "type": "uint256"
        }
      ],
      "name": "HatCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "InterestPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hatId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isDistribution",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "redeemableAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "internalSavingsAmount",
          "type": "uint256"
        }
      ],
      "name": "LoansTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ALLOCATION_STRATEGY_EXCHANGE_RATE_SCALE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SAVING_ASSET_CONVERSION_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_NUM_HAT_RECIPIENTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_UINT256",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PROPORTION_BASE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SELF_HAT_ID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_guardCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accountStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cumulativeInterest",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "hatID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rInterest",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sInternalAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "allocationStrategy_",
          "type": "address"
        }
      ],
      "name": "changeAllocationStrategy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "hatID",
          "type": "uint256"
        }
      ],
      "name": "changeHat",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "hatID",
          "type": "uint256"
        }
      ],
      "name": "changeHatFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint32[]",
          "name": "proportions",
          "type": "uint32[]"
        },
        {
          "internalType": "bool",
          "name": "doChangeHat",
          "type": "bool"
        }
      ],
      "name": "createHat",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "hatID",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getAccountStats",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "hatID",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rInterest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lDebt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sInternalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rInterestPayable",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cumulativeInterest",
              "type": "uint256"
            }
          ],
          "internalType": "struct RTokenStructs.AccountStatsView",
          "name": "stats",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentAllocationStrategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "allocationStrategy",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentSavingStrategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getGlobalStats",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSavingsAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct RTokenStructs.GlobalStats",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getHatByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "hatID",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint32[]",
          "name": "proportions",
          "type": "uint32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "hatID",
          "type": "uint256"
        }
      ],
      "name": "getHatByID",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint32[]",
          "name": "proportions",
          "type": "uint32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "hatID",
          "type": "uint256"
        }
      ],
      "name": "getHatStats",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "useCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalLoans",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSavings",
              "type": "uint256"
            }
          ],
          "internalType": "struct RTokenStructs.HatStatsView",
          "name": "stats",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMaximumHatID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "hatID",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSavingAssetBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sOriginalAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "hatStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "useCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalLoans",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalInternalSavings",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ias",
      "outputs": [
        {
          "internalType": "contract IAllocationStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IAllocationStrategy",
          "name": "allocationStrategy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "decimals_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "interestPayableOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint32[]",
          "name": "proportions",
          "type": "uint32[]"
        }
      ],
      "name": "mintWithNewHat",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "hatID",
          "type": "uint256"
        }
      ],
      "name": "mintWithSelectedHat",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "payInterest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "receivedLoanOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "receivedSavingsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "redeemAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "redeemTo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "redeemAndTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "redeemTo",
          "type": "address"
        }
      ],
      "name": "redeemAndTransferAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "savingAssetConversionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "savingAssetOrignalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        }
      ],
      "name": "transferAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        }
      ],
      "name": "transferAllFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "transferAllowances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newCode",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validate",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"conversionRate\",\"type\":\"uint256\"}],\"name\":\"AllocationStrategyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCode\",\"type\":\"address\"}],\"name\":\"CodeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldHatID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newHatID\",\"type\":\"uint256\"}],\"name\":\"HatChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hatID\",\"type\":\"uint256\"}],\"name\":\"HatCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InterestPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hatId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isDistribution\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemableAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"internalSavingsAmount\",\"type\":\"uint256\"}],\"name\":\"LoansTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOCATION_STRATEGY_EXCHANGE_RATE_SCALE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SAVING_ASSET_CONVERSION_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_NUM_HAT_RECIPIENTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PROPORTION_BASE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SELF_HAT_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_guardCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accountStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cumulativeInterest\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hatID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sInternalAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"allocationStrategy_\",\"type\":\"address\"}],\"name\":\"changeAllocationStrategy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"hatID\",\"type\":\"uint256\"}],\"name\":\"changeHat\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"hatID\",\"type\":\"uint256\"}],\"name\":\"changeHatFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"proportions\",\"type\":\"uint32[]\"},{\"internalType\":\"bool\",\"name\":\"doChangeHat\",\"type\":\"bool\"}],\"name\":\"createHat\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hatID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getAccountStats\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"hatID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sInternalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rInterestPayable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeInterest\",\"type\":\"uint256\"}],\"internalType\":\"struct RTokenStructs.AccountStatsView\",\"name\":\"stats\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentAllocationStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"allocationStrategy\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentSavingStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getGlobalStats\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSavingsAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RTokenStructs.GlobalStats\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getHatByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hatID\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"proportions\",\"type\":\"uint32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"hatID\",\"type\":\"uint256\"}],\"name\":\"getHatByID\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"proportions\",\"type\":\"uint32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"hatID\",\"type\":\"uint256\"}],\"name\":\"getHatStats\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"useCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalLoans\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSavings\",\"type\":\"uint256\"}],\"internalType\":\"struct RTokenStructs.HatStatsView\",\"name\":\"stats\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMaximumHatID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hatID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSavingAssetBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sOriginalAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hatStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"useCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalLoans\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalInternalSavings\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ias\",\"outputs\":[{\"internalType\":\"contract IAllocationStrategy\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IAllocationStrategy\",\"name\":\"allocationStrategy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"decimals_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"interestPayableOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"proportions\",\"type\":\"uint32[]\"}],\"name\":\"mintWithNewHat\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hatID\",\"type\":\"uint256\"}],\"name\":\"mintWithSelectedHat\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"payInterest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"receivedLoanOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"receivedSavingsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"redeemAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"redeemTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeemAndTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"redeemTo\",\"type\":\"address\"}],\"name\":\"redeemAndTransferAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"savingAssetConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"savingAssetOrignalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"}],\"name\":\"transferAllFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"transferAllowances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCode\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"validate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Test RTokenStorage Layout\",\"methods\":{\"changeAllocationStrategy(address)\":{\"details\":\"IRToken.changeAllocationStrategy implementation\"},\"changeHat(uint256)\":{\"details\":\"IRToken.changeHat implementation\"},\"changeHatFor(address,uint256)\":{\"details\":\"IRToken.changeHatFor implementation\"},\"createHat(address[],uint32[],bool)\":{\"details\":\"IRToken.createHat implementation\"},\"getAccountStats(address)\":{\"details\":\"IRToken.getAccountStats implementation\"},\"getCurrentAllocationStrategy()\":{\"details\":\"IRToken.changeHatFor implementation\"},\"getCurrentSavingStrategy()\":{\"details\":\"IRToken.getCurrentSavingStrategy implementation\"},\"getGlobalStats()\":{\"details\":\"IRToken.getAccountStats implementation!1\"},\"getHatByAddress(address)\":{\"details\":\"IRToken.getHatByAddress implementation\"},\"getHatByID(uint256)\":{\"details\":\"IRToken.getHatByID implementation\"},\"getHatStats(uint256)\":{\"details\":\"IRToken.getHatStats implementation\"},\"getMaximumHatID()\":{\"details\":\"IRToken.getMaximumHatID implementation\"},\"getSavingAssetBalance()\":{\"details\":\"IRToken.getSavingAssetBalance implementation\"},\"interestPayableOf(address)\":{\"details\":\"IRToken.interestPayableOf implementation\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"mint(uint256)\":{\"details\":\"IRToken.mint implementation\"},\"mintWithNewHat(uint256,address[],uint32[])\":{\"details\":\"IRToken.mintWithNewHat implementation\"},\"mintWithSelectedHat(uint256,uint256)\":{\"details\":\"IRToken.mintWithSelectedHat implementation\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"payInterest(address)\":{\"details\":\"IRToken.payInterest implementation\"},\"receivedLoanOf(address)\":{\"details\":\"IRToken.receivedLoanOf implementation\"},\"receivedSavingsOf(address)\":{\"details\":\"IRToken.receivedSavingsOf implementation\"},\"redeem(uint256)\":{\"details\":\"IRToken.redeem implementation     It withdraws equal amount of initially supplied underlying assets\"},\"redeemAll()\":{\"details\":\"IRToken.redeemAll implementation\"},\"redeemAndTransfer(address,uint256)\":{\"details\":\"IRToken.redeemAndTransfer implementation\"},\"redeemAndTransferAll(address)\":{\"details\":\"IRToken.redeemAndTransferAll implementation\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferAll(address)\":{\"details\":\"IRToken.transferAll implementation\"},\"transferAllFrom(address,address)\":{\"details\":\"IRToken.transferAllFrom implementation\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateCode(address)\":{\"details\":\"Update the rToken logic contract code\"}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called.\"},\"approve(address,uint256)\":{\"notice\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event.\"},\"balanceOf(address)\":{\"notice\":\"Returns the amount of tokens owned by `account`.\"},\"initialize(address,string,string,uint256)\":{\"notice\":\"Create rToken linked with cToken at `cToken_`\"},\"transfer(address,uint256)\":{\"notice\":\"Moves `amount` tokens from the caller's account to `dst`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event. May also emit `InterestPaid` event.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/test/StorageLayout.sol\":\"RTokenStorageLayoutTester\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/IAllocationStrategy.sol\":{\"keccak256\":\"0x2fa0de4335ef9f82e24f0a11401d7150eb168e178d37ed124996e10d53e1c0ce\",\"urls\":[\"bzz-raw://8e4b93b422c9dd703e1346834a27b693af2c350809bbed7b1ecbc4a69fec94ea\",\"dweb:/ipfs/QmWNGNiJogJoXFhZ24uJVSNQ5jEmWYWsKruXb65t6Vg6Ha\"]},\"/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/IRToken.sol\":{\"keccak256\":\"0xc2320f1e88474ad0d517d2c36129b89ff14934aea037c6890e4f6560fccef450\",\"urls\":[\"bzz-raw://344d0440a81205554ac933a7c8ca480b9fbb3a1f85ed4432eb34ab9a2589a172\",\"dweb:/ipfs/QmSBfnde3JuLxS49EAj7RzUxTFUxHNR5Wb7gzRpnQiLQyY\"]},\"/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/IRTokenAdmin.sol\":{\"keccak256\":\"0x25dba438823ddf59003f7963b49cb3e7c1105e62c19126ccc99aeb39b02c59f9\",\"urls\":[\"bzz-raw://53c52647440910aa820fe4d0ad6a358faf4a6f80562fa0d6cb87b5a22c6fbed8\",\"dweb:/ipfs/QmVFpJKMQpFymdK22v4b4NQcs5yWEN3urTtnRkHFoideNx\"]},\"/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/LibraryLock.sol\":{\"keccak256\":\"0x9195f8c96fd7bb4cdd7696f14c15ff7cece01eca84a38de25693bf45318b018f\",\"urls\":[\"bzz-raw://0bd72dac7bb67467446ddea9fa47c79f9b48ce2c528cbab8fd05bdc19537cbd2\",\"dweb:/ipfs/QmSHK5T1927rf6T7xjRaQMuo1gpPaLVHb947pvPTHwXcwj\"]},\"/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/Ownable.sol\":{\"keccak256\":\"0xd2568237b51a02b9d1a1b143b938f664988828145f11d0d0acc44a832803f882\",\"urls\":[\"bzz-raw://4371b65f807c88fb73f3a691ade6ccdc556a28e0f63a8133f011c1f7054c7ffc\",\"dweb:/ipfs/QmVCZSEccoWe9BNFknDXjJviZbGrCUbs32bcwea9jtzpWA\"]},\"/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/Proxiable.sol\":{\"keccak256\":\"0xd14d0d1ae8b8ed59af55ac901ec2a60d1087ab7e86fbd389758baf6afb35721f\",\"urls\":[\"bzz-raw://bf892b136580d5241a54c68a942b2e23f0f321700fa1aacd16e0fdb5f01a1ced\",\"dweb:/ipfs/QmRUXF7yXBJVRwqv11dDxWqt8DEJXn3YMWRUZv8escF5ya\"]},\"/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/RToken.sol\":{\"keccak256\":\"0x52d3014a03948a52a984f41e3b8154067bef1ec2023a9b9a5bfdaffa82afff1c\",\"urls\":[\"bzz-raw://a7da12ea900a532bcea2a31ffe996ef0226b7bdf692adda99e8fa539c2d51d6a\",\"dweb:/ipfs/QmdVj5ikrm1qoh2x7SnyK3sjMRZZcB9nBPJLhZmBVbAUGG\"]},\"/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/RTokenStorage.sol\":{\"keccak256\":\"0xe25504c73c264e725a906232f113f5b64440f494294826e670a1ccb6fa48ca52\",\"urls\":[\"bzz-raw://8c6a5f480b052d58d94452569cf1d848ddd312ce02aa2343a3f31d462672d985\",\"dweb:/ipfs/QmYHSNUQjVw45Xwy7wSJybsxRN1TBd5iXm2sXHkD6n8ktG\"]},\"/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/RTokenStructs.sol\":{\"keccak256\":\"0xa69d36876e1bf62c38cc2700408924b5eb5cc1cc2ed6db2816b41a0e45409889\",\"urls\":[\"bzz-raw://a0005716dae617bba485296587d3e97b33e8014e1a91222f01cc9b2f4304e06d\",\"dweb:/ipfs/QmUEndgbjF1jjaY4XcT6x6fmvx5XgQzWBUYWG98jzmq1DP\"]},\"/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x447761b97eb2e13c2a44d868b1e4afd8127c6bfdea4bfbf642cfadd0b106b93b\",\"urls\":[\"bzz-raw://28a8e50952dad7e86a30ec746434adb8b7ed70249488508ead4f271a6f61e74e\",\"dweb:/ipfs/QmNmJkH3DKcQsD9ZRUWzeojLNvgjn8TNVtHkbDRy35X8RY\"]},\"/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/test/StorageLayout.sol\":{\"keccak256\":\"0x882324ce7675e2c82fc6168f50371e67b6c47bf4d8216dbd865b3460b47b8d0d\",\"urls\":[\"bzz-raw://9481e9d5bf48e2ed27010d31dcecafc8ea10605348c2f0a7239e6e4458f23311\",\"dweb:/ipfs/QmPf8MEGv5NxePVGn7pgESx8rKYvgcGeC1fMygee3rKr9Q\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "0x60806040819052600080546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a361454b806100576000396000f3fe608060405234801561001057600080fd5b50600436106103a45760003560e01c80636b4169c3116101e9578063bf5bfdfb1161010f578063d8884795116100ad578063f04bf8b31161007c578063f04bf8b31461074c578063f2fde38b1461076e578063fc0c546a14610781578063fdbbf8ac14610789576103a4565b8063d888479514610708578063db006a751461071e578063dd62ed3e14610731578063e192782b14610744576103a4565b8063c200659e116100e9578063c200659e146106c7578063d007c644146106cf578063d271be3f146106e2578063d3ac25c4146106f5576103a4565b8063bf5bfdfb146106bf578063c034d0db146104f5578063c1a2007d14610431576103a4565b80638da5cb5b11610187578063a3a7e7f311610156578063a3a7e7f31461067e578063a9059cbb14610691578063b2bdfa7b146106a4578063b5dbfc1a146106ac576103a4565b80638da5cb5b146106535780638f32d59b1461065b57806395d89b4114610663578063a0712d681461066b576103a4565b806371ee46eb116101c357806371ee46eb1461062557806377ede0511461062d57806381c8d895146103d257806384d4b41014610640576103a4565b80636b4169c3146105f557806370a082311461060a578063715018a61461061d576103a4565b8063313ce567116102ce5780634d12d4b61161026c5780635cde50551161023b5780635cde5055146105a35780635e5c06e2146105b657806363152a50146105da5780636901f668146105ed576103a4565b80634d12d4b6146105535780634fd7c0dd1461056657806352d1902d14610586578063556043ef1461058e576103a4565b80633e20a929116102a85780633e20a9291461051057806346951954146105185780634929fbf71461052d578063496cc16414610540576103a4565b8063313ce567146104ed57806333a581d2146104f5578063388c0b8c146104fd576103a4565b8063158ef93e1161034657806323b872dd1161031557806323b872dd1461049f57806328cdfaeb146104b25780632f2ba814146104d25780632f4350c2146104e5576103a4565b8063158ef93e1461045957806318160ddd146104615780631cda95d514610469578063226e835c1461048a576103a4565b806306fdde031161038257806306fdde0314610409578063095ea7b31461041e57806310f3a6d81461043157806313e23e4114610446576103a4565b80630290cbc8146103a9578063039ab887146103d2578063054ab01a146103e7575b600080fd5b6103bc6103b7366004613592565b61079c565b6040516103c99190614172565b60405180910390f35b6103da61080f565b6040516103c9919061419b565b6103fa6103f5366004613592565b61081b565b6040516103c993929190614382565b61041161084a565b6040516103c991906141b7565b6103bc61042c366004613655565b6108d5565b610439610943565b6040516103c991906140e1565b6103da610454366004613592565b610953565b6103bc610975565b6103da610985565b61047c6104773660046137e0565b61098b565b6040516103c992919061414d565b6104926109a1565b6040516103c99190614427565b6103bc6104ad366004613608565b6109a9565b6104c56104c0366004613592565b610a01565b6040516103c99190614358565b6103bc6104e03660046137e0565b610a87565b6103bc610acc565b6103da610b34565b6103da610b3a565b6103bc61050b366004613885565b610b40565b6103da610b95565b61052b610526366004613592565b610b9f565b005b61052b61053b366004613655565b610c34565b6103da61054e366004613592565b610c8b565b61052b610561366004613747565b610c9d565b6105796105743660046137e0565b610ece565b6040516103c99190614374565b6103da610f10565b610596610f34565b6040516103c991906141a9565b6103da6105b1366004613685565b610f43565b6105c96105c4366004613592565b610ffa565b6040516103c99594939291906143db565b6103da6105e83660046135ce565b611029565b61052b611046565b6105fd61104f565b6040516103c99190614366565b6103da610618366004613592565b61107f565b61052b61109d565b6103da61110b565b6103da61063b366004613592565b611111565b6103bc61064e3660046135ce565b611139565b610439611183565b6103bc611192565b6104116111a3565b6103bc6106793660046137e0565b6111fe565b6103bc61068c366004613592565b611214565b6103bc61069f366004613655565b61125f565b6104396112b1565b6103bc6106ba3660046137fe565b6112c0565b6103da611380565b6103da611386565b6103bc6106dd366004613592565b61138c565b6103bc6106f0366004613655565b6113a2565b61052b610703366004613592565b6113c3565b6107106116ed565b6040516103c99291906143bf565b6103bc61072c3660046137e0565b611702565b6103da61073f3660046135ce565b611723565b6103da61174e565b61075f61075a3660046137e0565b611753565b6040516103c9939291906143cd565b61052b61077c366004613592565b611774565b6105966117a4565b6103da610797366004613592565b6117b3565b60018054810190819055600090336107b3816117e3565b6001600160a01b0381166000908152600c60205260409020600101546107da90859061198c565b600192505060015481146108095760405162461bcd60e51b815260040161080090614338565b60405180910390fd5b50919050565b670de0b6b3a764000081565b6001600160a01b0381166000908152600c602052604090205460608061084083611b14565b9395909450915050565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156108cd5780601f106108a2576101008083540402835291602001916108cd565b820191906000526020600020905b8154815290600101906020018083116108b057829003601f168201915b505050505081565b336000818152600a602090815260408083206001600160a01b03871680855292528083208590555191929182907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061092f90879061419b565b60405180910390a360019150505b92915050565b6006546001600160a01b03165b90565b6001600160a01b0381166000908152600c60205260409020600401545b919050565b600054600160a01b900460ff1681565b60055481565b60608061099783611b14565b9094909350915050565b63ffffffff81565b600180548101908190556000906109bf856117e3565b6109cb33868686611c76565b6109d4846117e3565b6001915060015481146109f95760405162461bcd60e51b815260040161080090614338565b509392505050565b610a09613243565b6001600160a01b0382166000908152600c6020908152604091829020805484526001810154918401919091526002810154918301919091526004810154606083015260058101546080830152610a5e81611f93565b60a0830152506001600160a01b0382166000908152600d602052604090205460c0820152919050565b60018054810190819055600090610a9e3384611fe6565b610aa7336117e3565b6001915060015481146108095760405162461bcd60e51b815260040161080090614338565b6001805481019081905560009033610ae3816117e3565b6001600160a01b0381166000908152600c6020526040902060010154610b0a90829061198c565b60019250506001548114610b305760405162461bcd60e51b815260040161080090614338565b5090565b60045481565b60001981565b60018054810190819055600090610b573384611fe6565b610b60846120c1565b610b69336117e3565b600191506001548114610b8e5760405162461bcd60e51b815260040161080090614338565b5092915050565b600b546000190190565b610ba7611192565b610bc35760405162461bcd60e51b8152600401610800906142c8565b600054600160a01b900460ff161515600114610bf15760405162461bcd60e51b815260040161080090614318565b610bfa816123bf565b7f34459cf4c63f38e9b4af4ff8f74035bad6157484e669ffde70188afdf9917c6881604051610c2991906140e1565b60405180910390a150565b610c3c611192565b610c585760405162461bcd60e51b8152600401610800906142c8565b610c6182612492565b610c7d5760405162461bcd60e51b815260040161080090614268565b610c878282611fe6565b5050565b600d6020526000908152604090205481565b600054600160a01b900460ff1615610cc75760405162461bcd60e51b815260040161080090614258565b610ccf612498565b600080546001600160a01b0319163317905560018055610cf160028686613280565b50610cfe60038484613280565b506004818155670de0b6b3a7640000600955600680546001600160a01b0319166001600160a01b03898116919091179182905560408051636f307dc360e01b815290519290911692636f307dc3928282019260209290829003018186803b158015610d6857600080fd5b505afa158015610d7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610da091908101906135b0565b600780546001600160a01b03929092166001600160a01b031990921691909117905560408051600081830181815260608301845282528251818152602080820190945283830152600b8054600181018083559190925282518051919460029093027f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90192610e33928492909101906132fa565b506020828101518051610e4c926001850192019061335b565b5050600080525050600e6020526000197fe710864318d4a32f37d6ce54cb3fadbef648dd12d8dbdf53973564d56b7f881c556006546009546040517faa54229fa6d6451d2cd5d13b5bc60f1230a0f79091118926e9b95d8f4811713a92610ebe926001600160a01b0390911691614132565b60405180910390a1505050505050565b610ed6613406565b6000828152600e60209081526040909120805483526001810154918301919091526002810154610f05906124ad565b604083015250919050565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf790565b6006546001600160a01b031681565b60018054810190819055604080516020808802828101820190935287825260009392610fbd92918a918a9182919085019084908082843760009201919091525050604080516020808b0282810182019093528a82529093508a92508991829185019084908082843760009201919091525061254b92505050565b91508215610fcf57610fcf3383611fe6565b6001548114610ff05760405162461bcd60e51b815260040161080090614338565b5095945050505050565b600c60205260009081526040902080546001820154600283015460048401546005909401549293919290919085565b600a60209081526000928352604080842090915290825290205481565b600e6000610c87565b611057613427565b600061106460085461278c565b60408051808201909152600554815291016020820152905090565b6001600160a01b03166000908152600c602052604090206001015490565b6110a5611192565b6110c15760405162461bcd60e51b8152600401610800906142c8565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60085481565b6001600160a01b0381166000908152600c6020526040812061113281611f93565b9392505050565b6001805481019081905560009061114f846117e3565b6001600160a01b0384166000908152600c602052604090206001015461117a90339086908690611c76565b610b69836117e3565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108cd5780601f106108a2576101008083540402835291602001916108cd565b60018054810190819055600090610a9e836120c1565b600180548101908190556000903361122b816117e3565b6001600160a01b0381166000908152600c602052604090206001015461125690829081908790611c76565b6107da846117e3565b6001805481019081905560009033611276816117e3565b61128281828787611c76565b61128b856117e3565b60019250506001548114610b8e5760405162461bcd60e51b815260040161080090614338565b6000546001600160a01b031681565b60018054810190819055604080516020808702828101820190935286825260009392849261133c9290918a918a91829185019084908082843760009201919091525050604080516020808b0282810182019093528a82529093508a92508991829185019084908082843760009201919091525061254b92505050565b90506113483382611fe6565b611351886120c1565b61135a336117e3565b60019250506001548114610ff05760405162461bcd60e51b815260040161080090614338565b60015481565b60095481565b60018054810190819055600090610aa7836117e3565b60018054810190819055600090336113b9816117e3565b61128b858561198c565b600180548101908190556113d5611192565b6113f15760405162461bcd60e51b8152600401610800906142c8565b60075460408051636f307dc360e01b8152905184926001600160a01b039081169290841691636f307dc391600480820192602092909190829003018186803b15801561143c57600080fd5b505afa158015611450573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061147491908101906135b0565b6001600160a01b03161461149a5760405162461bcd60e51b815260040161080090614298565b600680546001600160a01b038381166001600160a01b031983161790925560055460405163852a12e360e01b81529290911691600091839163852a12e3916114e49160040161419b565b602060405180830381600087803b1580156114fe57600080fd5b505af1158015611512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115369190810190613729565b60075460065460055460405163095ea7b360e01b81529394506001600160a01b039283169363095ea7b39361157093169190600401614132565b602060405180830381600087803b15801561158a57600080fd5b505af115801561159e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115c2919081019061370b565b6115de5760405162461bcd60e51b815260040161080090614248565b600654600554604051630305da4f60e61b81526000926001600160a01b03169163c17693c091611611919060040161419b565b602060405180830381600087803b15801561162b57600080fd5b505af115801561163f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116639190810190613729565b6009549091506116898261167d858463ffffffff6127eb16565b9063ffffffff61282516565b60098190556040517faa54229fa6d6451d2cd5d13b5bc60f1230a0f79091118926e9b95d8f4811713a916116bf918a9190614132565b60405180910390a150505050506001548114610c875760405162461bcd60e51b815260040161080090614338565b6008546000906116fc8161278c565b91509091565b6001805481019081905560009033611719816117e3565b6107da818561198c565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205490565b603281565b600e6020526000908152604090208054600182015460029092015490919083565b61177c611192565b6117985760405162461bcd60e51b8152600401610800906142c8565b6117a181612867565b50565b6007546001600160a01b031681565b6001600160a01b0381166000908152600c60205260408120600581015482906117db906124ad565b949350505050565b6001600160a01b038082166000908152600c60209081526040808320600d8352818420600654835163a6afed9560e01b815293519296919591169363a6afed95936004808201949293918390030190829087803b15801561184357600080fd5b505af1158015611857573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061187b919081019061370b565b6118975760405162461bcd60e51b8152600401610800906141c8565b60006118a283611f93565b905080156119865781546118bc908263ffffffff6128e816565b825560028301546118d3908263ffffffff6128e816565b600284015560018301546118ed908263ffffffff6128e816565b6001840155600554611905908263ffffffff6128e816565b6005556040516001600160a01b038516907f16cbc685358ca7d4e6b273dcdf2cb5d18c80b950aa2319b519756cd016233a6c9061194390849061419b565b60405180910390a2836001600160a01b031660006001600160a01b03166000805160206144e98339815191528360405161197d919061419b565b60405180910390a35b50505050565b336000908152600c60205260409020816119b85760405162461bcd60e51b8152600401610800906142e8565b80600101548211156119dc5760405162461bcd60e51b815260040161080090614288565b60006119e8338461290d565b6001830154909150611a00908463ffffffff6129aa16565b6001830181905560028301541115611a1d57600182015460028301555b600554611a30908463ffffffff6129aa16565b600555600854811015611a4b57600880548290039055611a51565b60006008555b60075460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90611a839087908790600401614132565b602060405180830381600087803b158015611a9d57600080fd5b505af1158015611ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ad5919081019061370b565b611af15760405162461bcd60e51b8152600401610800906142a8565b60405160009033906000805160206144e98339815191529061197d90879061419b565b6060808215801590611b2857506000198314155b15611c5757611b35613441565b600b8481548110611b4257fe5b906000526020600020906002020160405180604001604052908160008201805480602002602001604051908101604052809291908181526020018280548015611bb457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611b96575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611c3857602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611bfb5790505b5050505050815250509050806000015192508060200151915050611c71565b505060408051600080825260208201908152818301909252905b915091565b816001600160a01b0316836001600160a01b03161415611ca85760405162461bcd60e51b815260040161080090614278565b6001600160a01b0383166000908152600c6020526040902060010154811115611ce35760405162461bcd60e51b8152600401610800906142d8565b60006001600160a01b038581169085161415611d025750600019611d2a565b506001600160a01b038084166000908152600a60209081526040808320938816835292905220545b81811015611d4a5760405162461bcd60e51b8152600401610800906141d8565b6000611d5c828463ffffffff6129aa16565b6001600160a01b0386166000908152600c602052604081206001015491925090611d8c908563ffffffff6129aa16565b6001600160a01b0386166000908152600c602052604081206001015491925090611dbc908663ffffffff6128e816565b6001600160a01b038088166000908152600c602052604080822054928b16825290205491925081149015801590611e0957506001600160a01b0387166000908152600c6020526040902054155b8015611e2f57506001600160a01b0388166000908152600c602052604090205460001914155b15611e58576001600160a01b0388166000908152600c6020526040902054611e58908890611fe6565b6001600160a01b038089166000908152600c60205260408082206001908101879055928a1682529020018290556000198514611eb7576001600160a01b038089166000908152600a60209081526040808320938d168352929052208490555b80611edb576000611ec889886129ec565b9050611ed5888883612a9c565b50611f02565b6001600160a01b0388166000908152600c6020526040902054611f02908990899089612ce3565b6001600160a01b0388166000908152600c6020526040902060018101546002909101541115611f4f576001600160a01b0388166000908152600c6020526040902060018101546002909101555b866001600160a01b0316886001600160a01b03166000805160206144e983398151915288604051611f80919061419b565b60405180910390a3505050505050505050565b600080611fa383600501546124ad565b9050611fc0836002015484600401546128e890919063ffffffff16565b811115611fdc5782600201548360040154820303915050610970565b6000915050610970565b600019811480611ff75750600b5481105b6120135760405162461bcd60e51b815260040161080090614218565b6001600160a01b0382166000908152600c602090815260408083208054808552600e9093528184208585529190932084845560018401541561207257600061205f8786600101546129ec565b905061207087866001015483612a9c565b505b815460001901825580546001018155604051859084906001600160a01b038916907f356f094000bcd3968ad51bf92c9d115ed7294626dea8ae4cc5b24273702e111390600090a4505050505050565b600754604051636eb1769f60e11b815282916001600160a01b03169063dd62ed3e906120f390339030906004016140ef565b60206040518083038186803b15801561210b57600080fd5b505afa15801561211f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121439190810190613729565b10156121615760405162461bcd60e51b8152600401610800906142f8565b336000818152600c60205260409081902060075491516323b872dd60e01b815290926001600160a01b03909216916323b872dd916121a691903090879060040161410a565b602060405180830381600087803b1580156121c057600080fd5b505af11580156121d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121f8919081019061370b565b6122145760405162461bcd60e51b8152600401610800906142a8565b60075460065460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39261224a929116908690600401614132565b602060405180830381600087803b15801561226457600080fd5b505af1158015612278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061229c919081019061370b565b6122b85760405162461bcd60e51b815260040161080090614248565b600654604051630305da4f60e61b81526000916001600160a01b03169063c17693c0906122e990869060040161419b565b602060405180830381600087803b15801561230357600080fd5b505af1158015612317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061233b9190810190613729565b600554909150612351908463ffffffff6128e816565b6005556001820154612369908463ffffffff6128e816565b6001830155600854612381908263ffffffff6128e816565b600855600061238f82612e36565b905061239c338583612a9c565b60405133906000906000805160206144e98339815191529061197d90889061419b565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156123f857600080fd5b505afa15801561240c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124309190810190613729565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf71461246e5760405162461bcd60e51b8152600401610800906141e8565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf755565b3b151590565b6000805460ff60a01b1916600160a01b179055565b600061093d60095461167d600660009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561250657600080fd5b505afa15801561251a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061253e9190810190613729565b859063ffffffff6127eb16565b600080600084511161256f5760405162461bcd60e51b815260040161080090614348565b6032845111156125915760405162461bcd60e51b815260040161080090614308565b82518451146125b25760405162461bcd60e51b815260040161080090614208565b506000805b84518210156126685760008483815181106125ce57fe5b602002602001015163ffffffff16116125f95760405162461bcd60e51b815260040161080090614328565b60006001600160a01b031685838151811061261057fe5b60200260200101516001600160a01b0316141561263f5760405162461bcd60e51b815260040161080090614238565b83828151811061264b57fe5b602002602001015163ffffffff16810190508160010191506125b7565b600091505b83518210156126d2578063ffffffff801685848151811061268a57fe5b602002602001015163ffffffff1602816126a057fe5b048483815181106126ad57fe5b602002602001019063ffffffff16908163ffffffff168152505081600101915061266d565b604080518082019091528581526020808201869052600b80546001818101808455600093909352845180519195939460029093027f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90192612738928492909101906132fa565b506020828101518051612751926001850192019061335b565b505050039250827f755babe5551737dcd4c723af196cff0ed1fa99a4c6957c62262d6b1425f864aa60405160405180910390a2505092915050565b600061093d670de0b6b3a764000061167d600660009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561250657600080fd5b6000826127fa5750600061093d565b8282028284828161280757fe5b04146111325760405162461bcd60e51b8152600401610800906142b8565b600061113283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612e59565b6001600160a01b03811661288d5760405162461bcd60e51b8152600401610800906141f8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828201838110156111325760405162461bcd60e51b815260040161080090614228565b60065460405163852a12e360e01b81526000916001600160a01b03169063852a12e39061293e90859060040161419b565b602060405180830381600087803b15801561295857600080fd5b505af115801561296c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129909190810190613729565b9050600061299d82612e36565b9050610b8e848483612e90565b600061113283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613087565b6006546040805163a6afed9560e01b815290516000926001600160a01b03169163a6afed9591600480830192602092919082900301818787803b158015612a3257600080fd5b505af1158015612a46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612a6a919081019061370b565b612a865760405162461bcd60e51b8152600401610800906141c8565b612a8f826130b3565b905061093d838383612e90565b6001600160a01b0383166000908152600c602052604081208054909190600b9060001914612acb578254612ace565b60005b81548110612ad857fe5b600091825260208220600290910201805490925015612c945750600084845b6001840154831015612c8d576000846000018481548110612b1457fe5b60009182526020808320909101546001600160a01b0316808352600c9091526040822060018801549193509160001990910186149081612ba15763ffffffff8016612b94896001018981548110612b6757fe5b600091825260209091206008820401548e916007166004026101000a900463ffffffff908116906127eb16565b81612b9b57fe5b04612ba3565b855b6001600160a01b038516600090815260038b016020526040902054909150612bd1908263ffffffff6128e816565b6001600160a01b038516600090815260038b0160205260409020556004830154612c01908263ffffffff6128e816565b6004840155612c108682613152565b9550600082612c3f5763ffffffff8016612c328a6001018a81548110612b6757fe5b81612c3957fe5b04612c41565b855b6005850154909150612c59908263ffffffff6128e816565b6005850155612c688682613152565b9550612c7d8d868c600001546001868661316d565b5050505050826001019250612af7565b5050612cdb565b6004830154612ca9908663ffffffff6128e816565b60048401556005830154612cc3908563ffffffff6128e816565b60058401558254612cdb90879081906001898961316d565b505050505050565b600660009054906101000a90046001600160a01b03166001600160a01b031663a6afed956040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612d3357600080fd5b505af1158015612d47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d6b919081019061370b565b612d875760405162461bcd60e51b8152600401610800906141c8565b6001600160a01b038085166000908152600c60205260408082209286168252812090612db2846130b3565b9050612dc2836004015485613152565b60048401556005830154612dd69082613152565b6005840155612dea8780876000888661316d565b6004820154612dff908563ffffffff6128e816565b60048301556005820154612e19908263ffffffff6128e816565b6005830155612e2d8680876001888661316d565b50505050505050565b600061093d670de0b6b3a764000061167d600954856127eb90919063ffffffff16565b60008183612e7a5760405162461bcd60e51b815260040161080091906141b7565b506000838581612e8657fe5b0495945050505050565b6001600160a01b0383166000908152600c602052604081208054909190600b9060001914612ebf578254612ec2565b60005b81548110612ecc57fe5b6000918252602090912060029091020180549091501561304657838360005b600184015481101561303e576000846000018281548110612f0857fe5b60009182526020808320909101546001600160a01b0316808352600c9091526040822060018801549193509160001990910184149081612f685763ffffffff8016612f5b896001018781548110612b6757fe5b81612f6257fe5b04612f6a565b865b9050612f7a836004015482613152565b60048401556001600160a01b038416600090815260038a016020526040902054612fa49082613152565b6001600160a01b038516600090815260038b016020526040902055612fc98782613152565b9650600082612ff85763ffffffff8016612feb8a6001018881548110612b6757fe5b81612ff257fe5b04612ffa565b865b905061300a846005015482613152565b60058501556130198782613152565b965061302e8d868c600001546000868661316d565b5050505050806001019050612eeb565b505050613080565b613054826004015485613152565b600483015560058201546130689084613152565b6005830155815461308090869081906000888861316d565b5050505050565b600081848411156130ab5760405162461bcd60e51b815260040161080091906141b7565b505050900390565b600061093d600660009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561310657600080fd5b505afa15801561311a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061313e9190810190613729565b60095461167d90859063ffffffff6127eb16565b6000818310156131645750600061093d565b5080820361093d565b6000600e6000868152602001908152602001600020905084866001600160a01b0316886001600160a01b03167f7fb238306664f9cc50083b666d8979f411dd72154c6e9bf558c76b39e14e7d298787876040516131cc93929190614180565b60405180910390a483156132135760018101546131ef908463ffffffff6128e816565b60018201556002810154613209908363ffffffff6128e816565b6002820155612e2d565b613221816001015484613152565b600182015560028101546132359083613152565b600282015550505050505050565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106132c15782800160ff198235161785556132ee565b828001600101855582156132ee579182015b828111156132ee5782358255916020019190600101906132d3565b50610b3092915061345b565b82805482825590600052602060002090810192821561334f579160200282015b8281111561334f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061331a565b50610b30929150613475565b828054828255906000526020600020906007016008900481019282156133fa5791602002820160005b838211156133c857835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302613384565b80156133f85782816101000a81549063ffffffff02191690556004016020816003010492830192600103026133c8565b505b50610b30929150613499565b60405180606001604052806000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b61095091905b80821115610b305760008155600101613461565b61095091905b80821115610b305780546001600160a01b031916815560010161347b565b61095091905b80821115610b3057805463ffffffff1916815560010161349f565b803561093d816144b9565b805161093d816144b9565b60008083601f8401126134e257600080fd5b50813567ffffffffffffffff8111156134fa57600080fd5b60208301915083602082028301111561351257600080fd5b9250929050565b803561093d816144cd565b805161093d816144cd565b805161093d816144d6565b803561093d816144df565b60008083601f84011261355757600080fd5b50813567ffffffffffffffff81111561356f57600080fd5b60208301915083600182028301111561351257600080fd5b803561093d816144d6565b6000602082840312156135a457600080fd5b60006117db84846134ba565b6000602082840312156135c257600080fd5b60006117db84846134c5565b600080604083850312156135e157600080fd5b60006135ed85856134ba565b92505060206135fe858286016134ba565b9150509250929050565b60008060006060848603121561361d57600080fd5b600061362986866134ba565b935050602061363a868287016134ba565b925050604061364b86828701613587565b9150509250925092565b6000806040838503121561366857600080fd5b600061367485856134ba565b92505060206135fe85828601613587565b60008060008060006060868803121561369d57600080fd5b853567ffffffffffffffff8111156136b457600080fd5b6136c0888289016134d0565b9550955050602086013567ffffffffffffffff8111156136df57600080fd5b6136eb888289016134d0565b935093505060406136fe88828901613519565b9150509295509295909350565b60006020828403121561371d57600080fd5b60006117db8484613524565b60006020828403121561373b57600080fd5b60006117db848461352f565b6000806000806000806080878903121561376057600080fd5b600061376c898961353a565b965050602087013567ffffffffffffffff81111561378957600080fd5b61379589828a01613545565b9550955050604087013567ffffffffffffffff8111156137b457600080fd5b6137c089828a01613545565b935093505060606137d389828a01613587565b9150509295509295509295565b6000602082840312156137f257600080fd5b60006117db8484613587565b60008060008060006060868803121561381657600080fd5b60006138228888613587565b955050602086013567ffffffffffffffff81111561383f57600080fd5b61384b888289016134d0565b9450945050604086013567ffffffffffffffff81111561386a57600080fd5b613876888289016134d0565b92509250509295509295909350565b6000806040838503121561389857600080fd5b60006136748585613587565b60006138b083836138d3565b505060200190565b60006138b083836140d8565b6138cd81614478565b82525050565b6138cd81614448565b60006138e78261443b565b6138f1818561443f565b93506138fc83614435565b8060005b8381101561392a57815161391488826138a4565b975061391f83614435565b925050600101613900565b509495945050505050565b60006139408261443b565b61394a818561443f565b935061395583614435565b8060005b8381101561392a57815161396d88826138b8565b975061397883614435565b925050600101613959565b6138cd81614453565b6138cd81610950565b6138cd81614458565b60006139a98261443b565b6139b3818561443f565b93506139c3818560208601614483565b6139cc816144af565b9093019392505050565b60006139e360158361443f565b741858d8dc9d59525b9d195c995cdd0819985a5b1959605a1b815260200192915050565b6000613a1460218361443f565b7f4e6f7420656e6f75676820616c6c6f77616e636520666f72207472616e7366658152603960f91b602082015260400192915050565b6000613a57600e8361443f565b6d4e6f7420636f6d70617469626c6560901b815260200192915050565b6000613a8160268361443f565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b6000613ac960208361443f565b7f496e76616c6964206861743a206c656e677468206e6f74206d61746368696e67815260200192915050565b6000613b02600e8361443f565b6d125b9d985b1a59081a185d08125160921b815260200192915050565b6000613b2c601b8361443f565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000613b6560288361443f565b7f496e76616c6964206861743a20726563697069656e742073686f756c64206e6f815267074206265203078360c41b602082015260400192915050565b6000613baf60148361443f565b731d1bdad95b88185c1c1c9bdd994819985a5b195960621b815260200192915050565b6000613bdf60298361443f565b7f546865206c6962726172792068617320616c7265616479206265656e20696e698152683a34b0b634bd32b21760b91b602082015260400192915050565b6000613c2a602e8361443f565b7f41646d696e2063616e206f6e6c79206368616e67652068617420666f7220636f81526d6e7472616374206164647265737360901b602082015260400192915050565b6000613c7a60188361443f565b7f7372632073686f756c64206e6f7420657175616c206473740000000000000000815260200192915050565b6000613cb3601c8361443f565b7f4e6f7420656e6f7567682062616c616e636520746f2072656465656d00000000815260200192915050565b6000613cec60328361443f565b7f4e65772073747261746567792073686f756c642068617665207468652073616d81527119481d5b99195c9b1e5a5b99c8185cdcd95d60721b602082015260400192915050565b6000613d4060158361443f565b741d1bdad95b881d1c985b9cd9995c8819985a5b1959605a1b815260200192915050565b6000613d7160218361443f565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000613db460208361443f565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b6000613ded601e8361443f565b7f4e6f7420656e6f7567682062616c616e636520746f207472616e736665720000815260200192915050565b6000613e26601c8361443f565b7f52656465656d20616d6f756e742063616e6e6f74206265207a65726f00000000815260200192915050565b6000613e5f60148361443f565b734e6f7420656e6f75676820616c6c6f77616e636560601b815260200192915050565b6000613e8f60328361443f565b7f496e76616c696c64206861743a206d6178696d756d206e756d626572206f66208152711c9958da5c1a595b9d1cc81c995858da195960721b602082015260400192915050565b6000613ee360338361443f565b7f546865206c696272617279206973206c6f636b65642e204e6f206469726563748152721013b1b0b636139034b99030b63637bbb2b21760691b602082015260400192915050565b6000613f38602f8361443f565b7f496e76616c6964206861743a2070726f706f7274696f6e2073686f756c64206281526e065206c6172676572207468616e203608c1b602082015260400192915050565b6000613f89601f8361443f565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000613fc260238361443f565b7f496e76616c6964206861743a206174206c65617374206f6e6520726563697069815262195b9d60ea1b602082015260400192915050565b805160e083019061400b848261398c565b50602082015161401e602085018261398c565b506040820151614031604085018261398c565b506060820151614044606085018261398c565b506080820151614057608085018261398c565b5060a082015161406a60a085018261398c565b5060c082015161198660c085018261398c565b8051604083019061408e848261398c565b506020820151611986602085018261398c565b805160608301906140b2848261398c565b5060208201516140c5602085018261398c565b506040820151611986604085018261398c565b6138cd8161446f565b6020810161093d82846138d3565b604081016140fd82856138c4565b61113260208301846138d3565b6060810161411882866138c4565b61412560208301856138d3565b6117db604083018461398c565b6040810161414082856138d3565b611132602083018461398c565b6040808252810161415e81856138dc565b905081810360208301526117db8184613935565b6020810161093d8284613983565b6060810161418e8286613983565b614125602083018561398c565b6020810161093d828461398c565b6020810161093d8284613995565b60208082528101611132818461399e565b6020808252810161093d816139d6565b6020808252810161093d81613a07565b6020808252810161093d81613a4a565b6020808252810161093d81613a74565b6020808252810161093d81613abc565b6020808252810161093d81613af5565b6020808252810161093d81613b1f565b6020808252810161093d81613b58565b6020808252810161093d81613ba2565b6020808252810161093d81613bd2565b6020808252810161093d81613c1d565b6020808252810161093d81613c6d565b6020808252810161093d81613ca6565b6020808252810161093d81613cdf565b6020808252810161093d81613d33565b6020808252810161093d81613d64565b6020808252810161093d81613da7565b6020808252810161093d81613de0565b6020808252810161093d81613e19565b6020808252810161093d81613e52565b6020808252810161093d81613e82565b6020808252810161093d81613ed6565b6020808252810161093d81613f2b565b6020808252810161093d81613f7c565b6020808252810161093d81613fb5565b60e0810161093d8284613ffa565b6040810161093d828461407d565b6060810161093d82846140a1565b60608101614390828661398c565b81810360208301526143a281856138dc565b905081810360408301526143b68184613935565b95945050505050565b60408101614140828561398c565b6060810161418e828661398c565b60a081016143e9828861398c565b6143f6602083018761398c565b614403604083018661398c565b614410606083018561398c565b61441d608083018461398c565b9695505050505050565b6020810161093d82846140d8565b60200190565b5190565b90815260200190565b600061093d82614463565b151590565b600061093d82614448565b6001600160a01b031690565b63ffffffff1690565b600061093d82614458565b60005b8381101561449e578181015183820152602001614486565b838111156119865750506000910152565b601f01601f191690565b6144c281614448565b81146117a157600080fd5b6144c281614453565b6144c281610950565b6144c28161445856feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa365627a7a7231582026b0389252ba0eaea0ad9eee340bf4f32039eab8f6c61ebfe87dcbf83f5fe6186c6578706572696d656e74616cf564736f6c634300050c0040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103a45760003560e01c80636b4169c3116101e9578063bf5bfdfb1161010f578063d8884795116100ad578063f04bf8b31161007c578063f04bf8b31461074c578063f2fde38b1461076e578063fc0c546a14610781578063fdbbf8ac14610789576103a4565b8063d888479514610708578063db006a751461071e578063dd62ed3e14610731578063e192782b14610744576103a4565b8063c200659e116100e9578063c200659e146106c7578063d007c644146106cf578063d271be3f146106e2578063d3ac25c4146106f5576103a4565b8063bf5bfdfb146106bf578063c034d0db146104f5578063c1a2007d14610431576103a4565b80638da5cb5b11610187578063a3a7e7f311610156578063a3a7e7f31461067e578063a9059cbb14610691578063b2bdfa7b146106a4578063b5dbfc1a146106ac576103a4565b80638da5cb5b146106535780638f32d59b1461065b57806395d89b4114610663578063a0712d681461066b576103a4565b806371ee46eb116101c357806371ee46eb1461062557806377ede0511461062d57806381c8d895146103d257806384d4b41014610640576103a4565b80636b4169c3146105f557806370a082311461060a578063715018a61461061d576103a4565b8063313ce567116102ce5780634d12d4b61161026c5780635cde50551161023b5780635cde5055146105a35780635e5c06e2146105b657806363152a50146105da5780636901f668146105ed576103a4565b80634d12d4b6146105535780634fd7c0dd1461056657806352d1902d14610586578063556043ef1461058e576103a4565b80633e20a929116102a85780633e20a9291461051057806346951954146105185780634929fbf71461052d578063496cc16414610540576103a4565b8063313ce567146104ed57806333a581d2146104f5578063388c0b8c146104fd576103a4565b8063158ef93e1161034657806323b872dd1161031557806323b872dd1461049f57806328cdfaeb146104b25780632f2ba814146104d25780632f4350c2146104e5576103a4565b8063158ef93e1461045957806318160ddd146104615780631cda95d514610469578063226e835c1461048a576103a4565b806306fdde031161038257806306fdde0314610409578063095ea7b31461041e57806310f3a6d81461043157806313e23e4114610446576103a4565b80630290cbc8146103a9578063039ab887146103d2578063054ab01a146103e7575b600080fd5b6103bc6103b7366004613592565b61079c565b6040516103c99190614172565b60405180910390f35b6103da61080f565b6040516103c9919061419b565b6103fa6103f5366004613592565b61081b565b6040516103c993929190614382565b61041161084a565b6040516103c991906141b7565b6103bc61042c366004613655565b6108d5565b610439610943565b6040516103c991906140e1565b6103da610454366004613592565b610953565b6103bc610975565b6103da610985565b61047c6104773660046137e0565b61098b565b6040516103c992919061414d565b6104926109a1565b6040516103c99190614427565b6103bc6104ad366004613608565b6109a9565b6104c56104c0366004613592565b610a01565b6040516103c99190614358565b6103bc6104e03660046137e0565b610a87565b6103bc610acc565b6103da610b34565b6103da610b3a565b6103bc61050b366004613885565b610b40565b6103da610b95565b61052b610526366004613592565b610b9f565b005b61052b61053b366004613655565b610c34565b6103da61054e366004613592565b610c8b565b61052b610561366004613747565b610c9d565b6105796105743660046137e0565b610ece565b6040516103c99190614374565b6103da610f10565b610596610f34565b6040516103c991906141a9565b6103da6105b1366004613685565b610f43565b6105c96105c4366004613592565b610ffa565b6040516103c99594939291906143db565b6103da6105e83660046135ce565b611029565b61052b611046565b6105fd61104f565b6040516103c99190614366565b6103da610618366004613592565b61107f565b61052b61109d565b6103da61110b565b6103da61063b366004613592565b611111565b6103bc61064e3660046135ce565b611139565b610439611183565b6103bc611192565b6104116111a3565b6103bc6106793660046137e0565b6111fe565b6103bc61068c366004613592565b611214565b6103bc61069f366004613655565b61125f565b6104396112b1565b6103bc6106ba3660046137fe565b6112c0565b6103da611380565b6103da611386565b6103bc6106dd366004613592565b61138c565b6103bc6106f0366004613655565b6113a2565b61052b610703366004613592565b6113c3565b6107106116ed565b6040516103c99291906143bf565b6103bc61072c3660046137e0565b611702565b6103da61073f3660046135ce565b611723565b6103da61174e565b61075f61075a3660046137e0565b611753565b6040516103c9939291906143cd565b61052b61077c366004613592565b611774565b6105966117a4565b6103da610797366004613592565b6117b3565b60018054810190819055600090336107b3816117e3565b6001600160a01b0381166000908152600c60205260409020600101546107da90859061198c565b600192505060015481146108095760405162461bcd60e51b815260040161080090614338565b60405180910390fd5b50919050565b670de0b6b3a764000081565b6001600160a01b0381166000908152600c602052604090205460608061084083611b14565b9395909450915050565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156108cd5780601f106108a2576101008083540402835291602001916108cd565b820191906000526020600020905b8154815290600101906020018083116108b057829003601f168201915b505050505081565b336000818152600a602090815260408083206001600160a01b03871680855292528083208590555191929182907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061092f90879061419b565b60405180910390a360019150505b92915050565b6006546001600160a01b03165b90565b6001600160a01b0381166000908152600c60205260409020600401545b919050565b600054600160a01b900460ff1681565b60055481565b60608061099783611b14565b9094909350915050565b63ffffffff81565b600180548101908190556000906109bf856117e3565b6109cb33868686611c76565b6109d4846117e3565b6001915060015481146109f95760405162461bcd60e51b815260040161080090614338565b509392505050565b610a09613243565b6001600160a01b0382166000908152600c6020908152604091829020805484526001810154918401919091526002810154918301919091526004810154606083015260058101546080830152610a5e81611f93565b60a0830152506001600160a01b0382166000908152600d602052604090205460c0820152919050565b60018054810190819055600090610a9e3384611fe6565b610aa7336117e3565b6001915060015481146108095760405162461bcd60e51b815260040161080090614338565b6001805481019081905560009033610ae3816117e3565b6001600160a01b0381166000908152600c6020526040902060010154610b0a90829061198c565b60019250506001548114610b305760405162461bcd60e51b815260040161080090614338565b5090565b60045481565b60001981565b60018054810190819055600090610b573384611fe6565b610b60846120c1565b610b69336117e3565b600191506001548114610b8e5760405162461bcd60e51b815260040161080090614338565b5092915050565b600b546000190190565b610ba7611192565b610bc35760405162461bcd60e51b8152600401610800906142c8565b600054600160a01b900460ff161515600114610bf15760405162461bcd60e51b815260040161080090614318565b610bfa816123bf565b7f34459cf4c63f38e9b4af4ff8f74035bad6157484e669ffde70188afdf9917c6881604051610c2991906140e1565b60405180910390a150565b610c3c611192565b610c585760405162461bcd60e51b8152600401610800906142c8565b610c6182612492565b610c7d5760405162461bcd60e51b815260040161080090614268565b610c878282611fe6565b5050565b600d6020526000908152604090205481565b600054600160a01b900460ff1615610cc75760405162461bcd60e51b815260040161080090614258565b610ccf612498565b600080546001600160a01b0319163317905560018055610cf160028686613280565b50610cfe60038484613280565b506004818155670de0b6b3a7640000600955600680546001600160a01b0319166001600160a01b03898116919091179182905560408051636f307dc360e01b815290519290911692636f307dc3928282019260209290829003018186803b158015610d6857600080fd5b505afa158015610d7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610da091908101906135b0565b600780546001600160a01b03929092166001600160a01b031990921691909117905560408051600081830181815260608301845282528251818152602080820190945283830152600b8054600181018083559190925282518051919460029093027f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90192610e33928492909101906132fa565b506020828101518051610e4c926001850192019061335b565b5050600080525050600e6020526000197fe710864318d4a32f37d6ce54cb3fadbef648dd12d8dbdf53973564d56b7f881c556006546009546040517faa54229fa6d6451d2cd5d13b5bc60f1230a0f79091118926e9b95d8f4811713a92610ebe926001600160a01b0390911691614132565b60405180910390a1505050505050565b610ed6613406565b6000828152600e60209081526040909120805483526001810154918301919091526002810154610f05906124ad565b604083015250919050565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf790565b6006546001600160a01b031681565b60018054810190819055604080516020808802828101820190935287825260009392610fbd92918a918a9182919085019084908082843760009201919091525050604080516020808b0282810182019093528a82529093508a92508991829185019084908082843760009201919091525061254b92505050565b91508215610fcf57610fcf3383611fe6565b6001548114610ff05760405162461bcd60e51b815260040161080090614338565b5095945050505050565b600c60205260009081526040902080546001820154600283015460048401546005909401549293919290919085565b600a60209081526000928352604080842090915290825290205481565b600e6000610c87565b611057613427565b600061106460085461278c565b60408051808201909152600554815291016020820152905090565b6001600160a01b03166000908152600c602052604090206001015490565b6110a5611192565b6110c15760405162461bcd60e51b8152600401610800906142c8565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60085481565b6001600160a01b0381166000908152600c6020526040812061113281611f93565b9392505050565b6001805481019081905560009061114f846117e3565b6001600160a01b0384166000908152600c602052604090206001015461117a90339086908690611c76565b610b69836117e3565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108cd5780601f106108a2576101008083540402835291602001916108cd565b60018054810190819055600090610a9e836120c1565b600180548101908190556000903361122b816117e3565b6001600160a01b0381166000908152600c602052604090206001015461125690829081908790611c76565b6107da846117e3565b6001805481019081905560009033611276816117e3565b61128281828787611c76565b61128b856117e3565b60019250506001548114610b8e5760405162461bcd60e51b815260040161080090614338565b6000546001600160a01b031681565b60018054810190819055604080516020808702828101820190935286825260009392849261133c9290918a918a91829185019084908082843760009201919091525050604080516020808b0282810182019093528a82529093508a92508991829185019084908082843760009201919091525061254b92505050565b90506113483382611fe6565b611351886120c1565b61135a336117e3565b60019250506001548114610ff05760405162461bcd60e51b815260040161080090614338565b60015481565b60095481565b60018054810190819055600090610aa7836117e3565b60018054810190819055600090336113b9816117e3565b61128b858561198c565b600180548101908190556113d5611192565b6113f15760405162461bcd60e51b8152600401610800906142c8565b60075460408051636f307dc360e01b8152905184926001600160a01b039081169290841691636f307dc391600480820192602092909190829003018186803b15801561143c57600080fd5b505afa158015611450573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061147491908101906135b0565b6001600160a01b03161461149a5760405162461bcd60e51b815260040161080090614298565b600680546001600160a01b038381166001600160a01b031983161790925560055460405163852a12e360e01b81529290911691600091839163852a12e3916114e49160040161419b565b602060405180830381600087803b1580156114fe57600080fd5b505af1158015611512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115369190810190613729565b60075460065460055460405163095ea7b360e01b81529394506001600160a01b039283169363095ea7b39361157093169190600401614132565b602060405180830381600087803b15801561158a57600080fd5b505af115801561159e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115c2919081019061370b565b6115de5760405162461bcd60e51b815260040161080090614248565b600654600554604051630305da4f60e61b81526000926001600160a01b03169163c17693c091611611919060040161419b565b602060405180830381600087803b15801561162b57600080fd5b505af115801561163f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116639190810190613729565b6009549091506116898261167d858463ffffffff6127eb16565b9063ffffffff61282516565b60098190556040517faa54229fa6d6451d2cd5d13b5bc60f1230a0f79091118926e9b95d8f4811713a916116bf918a9190614132565b60405180910390a150505050506001548114610c875760405162461bcd60e51b815260040161080090614338565b6008546000906116fc8161278c565b91509091565b6001805481019081905560009033611719816117e3565b6107da818561198c565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205490565b603281565b600e6020526000908152604090208054600182015460029092015490919083565b61177c611192565b6117985760405162461bcd60e51b8152600401610800906142c8565b6117a181612867565b50565b6007546001600160a01b031681565b6001600160a01b0381166000908152600c60205260408120600581015482906117db906124ad565b949350505050565b6001600160a01b038082166000908152600c60209081526040808320600d8352818420600654835163a6afed9560e01b815293519296919591169363a6afed95936004808201949293918390030190829087803b15801561184357600080fd5b505af1158015611857573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061187b919081019061370b565b6118975760405162461bcd60e51b8152600401610800906141c8565b60006118a283611f93565b905080156119865781546118bc908263ffffffff6128e816565b825560028301546118d3908263ffffffff6128e816565b600284015560018301546118ed908263ffffffff6128e816565b6001840155600554611905908263ffffffff6128e816565b6005556040516001600160a01b038516907f16cbc685358ca7d4e6b273dcdf2cb5d18c80b950aa2319b519756cd016233a6c9061194390849061419b565b60405180910390a2836001600160a01b031660006001600160a01b03166000805160206144e98339815191528360405161197d919061419b565b60405180910390a35b50505050565b336000908152600c60205260409020816119b85760405162461bcd60e51b8152600401610800906142e8565b80600101548211156119dc5760405162461bcd60e51b815260040161080090614288565b60006119e8338461290d565b6001830154909150611a00908463ffffffff6129aa16565b6001830181905560028301541115611a1d57600182015460028301555b600554611a30908463ffffffff6129aa16565b600555600854811015611a4b57600880548290039055611a51565b60006008555b60075460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90611a839087908790600401614132565b602060405180830381600087803b158015611a9d57600080fd5b505af1158015611ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ad5919081019061370b565b611af15760405162461bcd60e51b8152600401610800906142a8565b60405160009033906000805160206144e98339815191529061197d90879061419b565b6060808215801590611b2857506000198314155b15611c5757611b35613441565b600b8481548110611b4257fe5b906000526020600020906002020160405180604001604052908160008201805480602002602001604051908101604052809291908181526020018280548015611bb457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611b96575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611c3857602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611bfb5790505b5050505050815250509050806000015192508060200151915050611c71565b505060408051600080825260208201908152818301909252905b915091565b816001600160a01b0316836001600160a01b03161415611ca85760405162461bcd60e51b815260040161080090614278565b6001600160a01b0383166000908152600c6020526040902060010154811115611ce35760405162461bcd60e51b8152600401610800906142d8565b60006001600160a01b038581169085161415611d025750600019611d2a565b506001600160a01b038084166000908152600a60209081526040808320938816835292905220545b81811015611d4a5760405162461bcd60e51b8152600401610800906141d8565b6000611d5c828463ffffffff6129aa16565b6001600160a01b0386166000908152600c602052604081206001015491925090611d8c908563ffffffff6129aa16565b6001600160a01b0386166000908152600c602052604081206001015491925090611dbc908663ffffffff6128e816565b6001600160a01b038088166000908152600c602052604080822054928b16825290205491925081149015801590611e0957506001600160a01b0387166000908152600c6020526040902054155b8015611e2f57506001600160a01b0388166000908152600c602052604090205460001914155b15611e58576001600160a01b0388166000908152600c6020526040902054611e58908890611fe6565b6001600160a01b038089166000908152600c60205260408082206001908101879055928a1682529020018290556000198514611eb7576001600160a01b038089166000908152600a60209081526040808320938d168352929052208490555b80611edb576000611ec889886129ec565b9050611ed5888883612a9c565b50611f02565b6001600160a01b0388166000908152600c6020526040902054611f02908990899089612ce3565b6001600160a01b0388166000908152600c6020526040902060018101546002909101541115611f4f576001600160a01b0388166000908152600c6020526040902060018101546002909101555b866001600160a01b0316886001600160a01b03166000805160206144e983398151915288604051611f80919061419b565b60405180910390a3505050505050505050565b600080611fa383600501546124ad565b9050611fc0836002015484600401546128e890919063ffffffff16565b811115611fdc5782600201548360040154820303915050610970565b6000915050610970565b600019811480611ff75750600b5481105b6120135760405162461bcd60e51b815260040161080090614218565b6001600160a01b0382166000908152600c602090815260408083208054808552600e9093528184208585529190932084845560018401541561207257600061205f8786600101546129ec565b905061207087866001015483612a9c565b505b815460001901825580546001018155604051859084906001600160a01b038916907f356f094000bcd3968ad51bf92c9d115ed7294626dea8ae4cc5b24273702e111390600090a4505050505050565b600754604051636eb1769f60e11b815282916001600160a01b03169063dd62ed3e906120f390339030906004016140ef565b60206040518083038186803b15801561210b57600080fd5b505afa15801561211f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121439190810190613729565b10156121615760405162461bcd60e51b8152600401610800906142f8565b336000818152600c60205260409081902060075491516323b872dd60e01b815290926001600160a01b03909216916323b872dd916121a691903090879060040161410a565b602060405180830381600087803b1580156121c057600080fd5b505af11580156121d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121f8919081019061370b565b6122145760405162461bcd60e51b8152600401610800906142a8565b60075460065460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39261224a929116908690600401614132565b602060405180830381600087803b15801561226457600080fd5b505af1158015612278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061229c919081019061370b565b6122b85760405162461bcd60e51b815260040161080090614248565b600654604051630305da4f60e61b81526000916001600160a01b03169063c17693c0906122e990869060040161419b565b602060405180830381600087803b15801561230357600080fd5b505af1158015612317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061233b9190810190613729565b600554909150612351908463ffffffff6128e816565b6005556001820154612369908463ffffffff6128e816565b6001830155600854612381908263ffffffff6128e816565b600855600061238f82612e36565b905061239c338583612a9c565b60405133906000906000805160206144e98339815191529061197d90889061419b565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156123f857600080fd5b505afa15801561240c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124309190810190613729565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf71461246e5760405162461bcd60e51b8152600401610800906141e8565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf755565b3b151590565b6000805460ff60a01b1916600160a01b179055565b600061093d60095461167d600660009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561250657600080fd5b505afa15801561251a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061253e9190810190613729565b859063ffffffff6127eb16565b600080600084511161256f5760405162461bcd60e51b815260040161080090614348565b6032845111156125915760405162461bcd60e51b815260040161080090614308565b82518451146125b25760405162461bcd60e51b815260040161080090614208565b506000805b84518210156126685760008483815181106125ce57fe5b602002602001015163ffffffff16116125f95760405162461bcd60e51b815260040161080090614328565b60006001600160a01b031685838151811061261057fe5b60200260200101516001600160a01b0316141561263f5760405162461bcd60e51b815260040161080090614238565b83828151811061264b57fe5b602002602001015163ffffffff16810190508160010191506125b7565b600091505b83518210156126d2578063ffffffff801685848151811061268a57fe5b602002602001015163ffffffff1602816126a057fe5b048483815181106126ad57fe5b602002602001019063ffffffff16908163ffffffff168152505081600101915061266d565b604080518082019091528581526020808201869052600b80546001818101808455600093909352845180519195939460029093027f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90192612738928492909101906132fa565b506020828101518051612751926001850192019061335b565b505050039250827f755babe5551737dcd4c723af196cff0ed1fa99a4c6957c62262d6b1425f864aa60405160405180910390a2505092915050565b600061093d670de0b6b3a764000061167d600660009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561250657600080fd5b6000826127fa5750600061093d565b8282028284828161280757fe5b04146111325760405162461bcd60e51b8152600401610800906142b8565b600061113283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612e59565b6001600160a01b03811661288d5760405162461bcd60e51b8152600401610800906141f8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828201838110156111325760405162461bcd60e51b815260040161080090614228565b60065460405163852a12e360e01b81526000916001600160a01b03169063852a12e39061293e90859060040161419b565b602060405180830381600087803b15801561295857600080fd5b505af115801561296c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129909190810190613729565b9050600061299d82612e36565b9050610b8e848483612e90565b600061113283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613087565b6006546040805163a6afed9560e01b815290516000926001600160a01b03169163a6afed9591600480830192602092919082900301818787803b158015612a3257600080fd5b505af1158015612a46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612a6a919081019061370b565b612a865760405162461bcd60e51b8152600401610800906141c8565b612a8f826130b3565b905061093d838383612e90565b6001600160a01b0383166000908152600c602052604081208054909190600b9060001914612acb578254612ace565b60005b81548110612ad857fe5b600091825260208220600290910201805490925015612c945750600084845b6001840154831015612c8d576000846000018481548110612b1457fe5b60009182526020808320909101546001600160a01b0316808352600c9091526040822060018801549193509160001990910186149081612ba15763ffffffff8016612b94896001018981548110612b6757fe5b600091825260209091206008820401548e916007166004026101000a900463ffffffff908116906127eb16565b81612b9b57fe5b04612ba3565b855b6001600160a01b038516600090815260038b016020526040902054909150612bd1908263ffffffff6128e816565b6001600160a01b038516600090815260038b0160205260409020556004830154612c01908263ffffffff6128e816565b6004840155612c108682613152565b9550600082612c3f5763ffffffff8016612c328a6001018a81548110612b6757fe5b81612c3957fe5b04612c41565b855b6005850154909150612c59908263ffffffff6128e816565b6005850155612c688682613152565b9550612c7d8d868c600001546001868661316d565b5050505050826001019250612af7565b5050612cdb565b6004830154612ca9908663ffffffff6128e816565b60048401556005830154612cc3908563ffffffff6128e816565b60058401558254612cdb90879081906001898961316d565b505050505050565b600660009054906101000a90046001600160a01b03166001600160a01b031663a6afed956040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612d3357600080fd5b505af1158015612d47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d6b919081019061370b565b612d875760405162461bcd60e51b8152600401610800906141c8565b6001600160a01b038085166000908152600c60205260408082209286168252812090612db2846130b3565b9050612dc2836004015485613152565b60048401556005830154612dd69082613152565b6005840155612dea8780876000888661316d565b6004820154612dff908563ffffffff6128e816565b60048301556005820154612e19908263ffffffff6128e816565b6005830155612e2d8680876001888661316d565b50505050505050565b600061093d670de0b6b3a764000061167d600954856127eb90919063ffffffff16565b60008183612e7a5760405162461bcd60e51b815260040161080091906141b7565b506000838581612e8657fe5b0495945050505050565b6001600160a01b0383166000908152600c602052604081208054909190600b9060001914612ebf578254612ec2565b60005b81548110612ecc57fe5b6000918252602090912060029091020180549091501561304657838360005b600184015481101561303e576000846000018281548110612f0857fe5b60009182526020808320909101546001600160a01b0316808352600c9091526040822060018801549193509160001990910184149081612f685763ffffffff8016612f5b896001018781548110612b6757fe5b81612f6257fe5b04612f6a565b865b9050612f7a836004015482613152565b60048401556001600160a01b038416600090815260038a016020526040902054612fa49082613152565b6001600160a01b038516600090815260038b016020526040902055612fc98782613152565b9650600082612ff85763ffffffff8016612feb8a6001018881548110612b6757fe5b81612ff257fe5b04612ffa565b865b905061300a846005015482613152565b60058501556130198782613152565b965061302e8d868c600001546000868661316d565b5050505050806001019050612eeb565b505050613080565b613054826004015485613152565b600483015560058201546130689084613152565b6005830155815461308090869081906000888861316d565b5050505050565b600081848411156130ab5760405162461bcd60e51b815260040161080091906141b7565b505050900390565b600061093d600660009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561310657600080fd5b505afa15801561311a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061313e9190810190613729565b60095461167d90859063ffffffff6127eb16565b6000818310156131645750600061093d565b5080820361093d565b6000600e6000868152602001908152602001600020905084866001600160a01b0316886001600160a01b03167f7fb238306664f9cc50083b666d8979f411dd72154c6e9bf558c76b39e14e7d298787876040516131cc93929190614180565b60405180910390a483156132135760018101546131ef908463ffffffff6128e816565b60018201556002810154613209908363ffffffff6128e816565b6002820155612e2d565b613221816001015484613152565b600182015560028101546132359083613152565b600282015550505050505050565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106132c15782800160ff198235161785556132ee565b828001600101855582156132ee579182015b828111156132ee5782358255916020019190600101906132d3565b50610b3092915061345b565b82805482825590600052602060002090810192821561334f579160200282015b8281111561334f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061331a565b50610b30929150613475565b828054828255906000526020600020906007016008900481019282156133fa5791602002820160005b838211156133c857835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302613384565b80156133f85782816101000a81549063ffffffff02191690556004016020816003010492830192600103026133c8565b505b50610b30929150613499565b60405180606001604052806000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b61095091905b80821115610b305760008155600101613461565b61095091905b80821115610b305780546001600160a01b031916815560010161347b565b61095091905b80821115610b3057805463ffffffff1916815560010161349f565b803561093d816144b9565b805161093d816144b9565b60008083601f8401126134e257600080fd5b50813567ffffffffffffffff8111156134fa57600080fd5b60208301915083602082028301111561351257600080fd5b9250929050565b803561093d816144cd565b805161093d816144cd565b805161093d816144d6565b803561093d816144df565b60008083601f84011261355757600080fd5b50813567ffffffffffffffff81111561356f57600080fd5b60208301915083600182028301111561351257600080fd5b803561093d816144d6565b6000602082840312156135a457600080fd5b60006117db84846134ba565b6000602082840312156135c257600080fd5b60006117db84846134c5565b600080604083850312156135e157600080fd5b60006135ed85856134ba565b92505060206135fe858286016134ba565b9150509250929050565b60008060006060848603121561361d57600080fd5b600061362986866134ba565b935050602061363a868287016134ba565b925050604061364b86828701613587565b9150509250925092565b6000806040838503121561366857600080fd5b600061367485856134ba565b92505060206135fe85828601613587565b60008060008060006060868803121561369d57600080fd5b853567ffffffffffffffff8111156136b457600080fd5b6136c0888289016134d0565b9550955050602086013567ffffffffffffffff8111156136df57600080fd5b6136eb888289016134d0565b935093505060406136fe88828901613519565b9150509295509295909350565b60006020828403121561371d57600080fd5b60006117db8484613524565b60006020828403121561373b57600080fd5b60006117db848461352f565b6000806000806000806080878903121561376057600080fd5b600061376c898961353a565b965050602087013567ffffffffffffffff81111561378957600080fd5b61379589828a01613545565b9550955050604087013567ffffffffffffffff8111156137b457600080fd5b6137c089828a01613545565b935093505060606137d389828a01613587565b9150509295509295509295565b6000602082840312156137f257600080fd5b60006117db8484613587565b60008060008060006060868803121561381657600080fd5b60006138228888613587565b955050602086013567ffffffffffffffff81111561383f57600080fd5b61384b888289016134d0565b9450945050604086013567ffffffffffffffff81111561386a57600080fd5b613876888289016134d0565b92509250509295509295909350565b6000806040838503121561389857600080fd5b60006136748585613587565b60006138b083836138d3565b505060200190565b60006138b083836140d8565b6138cd81614478565b82525050565b6138cd81614448565b60006138e78261443b565b6138f1818561443f565b93506138fc83614435565b8060005b8381101561392a57815161391488826138a4565b975061391f83614435565b925050600101613900565b509495945050505050565b60006139408261443b565b61394a818561443f565b935061395583614435565b8060005b8381101561392a57815161396d88826138b8565b975061397883614435565b925050600101613959565b6138cd81614453565b6138cd81610950565b6138cd81614458565b60006139a98261443b565b6139b3818561443f565b93506139c3818560208601614483565b6139cc816144af565b9093019392505050565b60006139e360158361443f565b741858d8dc9d59525b9d195c995cdd0819985a5b1959605a1b815260200192915050565b6000613a1460218361443f565b7f4e6f7420656e6f75676820616c6c6f77616e636520666f72207472616e7366658152603960f91b602082015260400192915050565b6000613a57600e8361443f565b6d4e6f7420636f6d70617469626c6560901b815260200192915050565b6000613a8160268361443f565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b6000613ac960208361443f565b7f496e76616c6964206861743a206c656e677468206e6f74206d61746368696e67815260200192915050565b6000613b02600e8361443f565b6d125b9d985b1a59081a185d08125160921b815260200192915050565b6000613b2c601b8361443f565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000613b6560288361443f565b7f496e76616c6964206861743a20726563697069656e742073686f756c64206e6f815267074206265203078360c41b602082015260400192915050565b6000613baf60148361443f565b731d1bdad95b88185c1c1c9bdd994819985a5b195960621b815260200192915050565b6000613bdf60298361443f565b7f546865206c6962726172792068617320616c7265616479206265656e20696e698152683a34b0b634bd32b21760b91b602082015260400192915050565b6000613c2a602e8361443f565b7f41646d696e2063616e206f6e6c79206368616e67652068617420666f7220636f81526d6e7472616374206164647265737360901b602082015260400192915050565b6000613c7a60188361443f565b7f7372632073686f756c64206e6f7420657175616c206473740000000000000000815260200192915050565b6000613cb3601c8361443f565b7f4e6f7420656e6f7567682062616c616e636520746f2072656465656d00000000815260200192915050565b6000613cec60328361443f565b7f4e65772073747261746567792073686f756c642068617665207468652073616d81527119481d5b99195c9b1e5a5b99c8185cdcd95d60721b602082015260400192915050565b6000613d4060158361443f565b741d1bdad95b881d1c985b9cd9995c8819985a5b1959605a1b815260200192915050565b6000613d7160218361443f565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000613db460208361443f565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b6000613ded601e8361443f565b7f4e6f7420656e6f7567682062616c616e636520746f207472616e736665720000815260200192915050565b6000613e26601c8361443f565b7f52656465656d20616d6f756e742063616e6e6f74206265207a65726f00000000815260200192915050565b6000613e5f60148361443f565b734e6f7420656e6f75676820616c6c6f77616e636560601b815260200192915050565b6000613e8f60328361443f565b7f496e76616c696c64206861743a206d6178696d756d206e756d626572206f66208152711c9958da5c1a595b9d1cc81c995858da195960721b602082015260400192915050565b6000613ee360338361443f565b7f546865206c696272617279206973206c6f636b65642e204e6f206469726563748152721013b1b0b636139034b99030b63637bbb2b21760691b602082015260400192915050565b6000613f38602f8361443f565b7f496e76616c6964206861743a2070726f706f7274696f6e2073686f756c64206281526e065206c6172676572207468616e203608c1b602082015260400192915050565b6000613f89601f8361443f565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000613fc260238361443f565b7f496e76616c6964206861743a206174206c65617374206f6e6520726563697069815262195b9d60ea1b602082015260400192915050565b805160e083019061400b848261398c565b50602082015161401e602085018261398c565b506040820151614031604085018261398c565b506060820151614044606085018261398c565b506080820151614057608085018261398c565b5060a082015161406a60a085018261398c565b5060c082015161198660c085018261398c565b8051604083019061408e848261398c565b506020820151611986602085018261398c565b805160608301906140b2848261398c565b5060208201516140c5602085018261398c565b506040820151611986604085018261398c565b6138cd8161446f565b6020810161093d82846138d3565b604081016140fd82856138c4565b61113260208301846138d3565b6060810161411882866138c4565b61412560208301856138d3565b6117db604083018461398c565b6040810161414082856138d3565b611132602083018461398c565b6040808252810161415e81856138dc565b905081810360208301526117db8184613935565b6020810161093d8284613983565b6060810161418e8286613983565b614125602083018561398c565b6020810161093d828461398c565b6020810161093d8284613995565b60208082528101611132818461399e565b6020808252810161093d816139d6565b6020808252810161093d81613a07565b6020808252810161093d81613a4a565b6020808252810161093d81613a74565b6020808252810161093d81613abc565b6020808252810161093d81613af5565b6020808252810161093d81613b1f565b6020808252810161093d81613b58565b6020808252810161093d81613ba2565b6020808252810161093d81613bd2565b6020808252810161093d81613c1d565b6020808252810161093d81613c6d565b6020808252810161093d81613ca6565b6020808252810161093d81613cdf565b6020808252810161093d81613d33565b6020808252810161093d81613d64565b6020808252810161093d81613da7565b6020808252810161093d81613de0565b6020808252810161093d81613e19565b6020808252810161093d81613e52565b6020808252810161093d81613e82565b6020808252810161093d81613ed6565b6020808252810161093d81613f2b565b6020808252810161093d81613f7c565b6020808252810161093d81613fb5565b60e0810161093d8284613ffa565b6040810161093d828461407d565b6060810161093d82846140a1565b60608101614390828661398c565b81810360208301526143a281856138dc565b905081810360408301526143b68184613935565b95945050505050565b60408101614140828561398c565b6060810161418e828661398c565b60a081016143e9828861398c565b6143f6602083018761398c565b614403604083018661398c565b614410606083018561398c565b61441d608083018461398c565b9695505050505050565b6020810161093d82846140d8565b60200190565b5190565b90815260200190565b600061093d82614463565b151590565b600061093d82614448565b6001600160a01b031690565b63ffffffff1690565b600061093d82614458565b60005b8381101561449e578181015183820152602001614486565b838111156119865750506000910152565b601f01601f191690565b6144c281614448565b81146117a157600080fd5b6144c281614453565b6144c281610950565b6144c28161445856feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa365627a7a7231582026b0389252ba0eaea0ad9eee340bf4f32039eab8f6c61ebfe87dcbf83f5fe6186c6578706572696d656e74616cf564736f6c634300050c0040",
  "sourceMap": "149:3348:26:-;;;;;358:6:16;:19;;-1:-1:-1;;;;;;358:19:16;367:10;358:19;;;;-1:-1:-1;;;;;425:6:16;;392:40;;358:6;;392:40;149:3348:26;;;;;;",
  "deployedSourceMapi;:::-;;;;;;;;;;;;;;;;1137:67;;;:::i;:::-;;;;;;;;8915:312;;;;;;;;;:::i;:::-;;;;;;;;;;882:18:20;;;:::i;:::-;;;;;;;;3701:232:19;;;;;;;;;:::i;14673:135::-;;;:::i;:::-;;;;;;;;10296:194;;;;;;;;;:::i;683:23:20:-;;;:::i;1164:26::-;;;:::i;9280:203:19:-;;;;;;;;;:::i;:::-;;;;;;;;;1328:51;;;:::i;:::-;;;;;;;;5454:281;;;;;;;;;:::i;11408:623::-;;;;;;;;;:::i;:::-;;;;;;;;8509:186;;;;;;;;;:::i;7205:206::-;;;:::i;1066:23:20:-;;;:::i;1210:57:19:-;;;:::i;6057:278::-;;;;;;;;;:::i;8753:104::-;;;:::i;15156:148::-;;;;;;;;;:::i;:::-;;14863:236;;;;;;;;;:::i;2495:58:20:-;;;;;;;;;:::i;1520:850:19:-;;;;;;;;;:::i;12085:377::-;;;;;;;;;:::i;:::-;;;;;;;;698:157:17;;;:::i;1233:30:20:-;;;:::i;:::-;;;;;;;;8128:329:19;;;;;;;;;:::i;2412:43:20:-;;;;;;;;;:::i;:::-;;;;;;;;;;;;2257:73;;;;;;;;;:::i;200:3295:26:-;;;:::i;11014:336:19:-;;;:::i;:::-;;;;;;;;2494:113;;;;;;;;;:::i;1300:137:16:-;;;:::i;1435:39:20:-;;;:::i;10550:213:19:-;;;;;;;;;:::i;4861:283::-;;;;;;;;;:::i;515:77:16:-;;;:::i;866:90::-;;;:::i;972:20:20:-;;;:::i;5821:174:19:-;;;;;;;;;:::i;4538:265::-;;;;;;;;;:::i;4193:291::-;;;;;;;;;:::i;656:21:20:-;;;:::i;6407:390:19:-;;;;;;;;;:::i;784:28:20:-;;;:::i;2146:40::-;;;:::i;10817:137:19:-;;;;;;;;;:::i;7471:276::-;;;;;;;;;:::i;12998:1620::-;;;;;;;;;:::i;12697:234::-;;;:::i;:::-;;;;;;;;;6939:214;;;;;;;;;:::i;2885:169::-;;;;;;;;;:::i;1385:51::-;;;:::i;2589:50:20:-;;;;;;;;;:::i;:::-;;;;;;;;;;1586:107:16;;;;;;;;;:::i;1299:19:20:-;;;:::i;9985:254:19:-;;;;;;;;;:::i;7810:266::-;545:1:22;528:18;;;;;;;;7913:4:19;;7947:10;7967:24;7947:10;7967:19;:24::i;:::-;-1:-1:-1;;;;;8026:13:19;;;;;;:8;:13;;;;;:21;;;8001:47;;8016:8;;8001:14;:47::i;:::-;8065:4;8058:11;;;650:13:22;;634:12;:29;613:107;;;;-1:-1:-1;;;613:107:22;;;;;;;;;;;;;;;;;7810:266:19;;;;:::o;1137:67::-;1200:4;1137:67;:::o;8915:312::-;-1:-1:-1;;;;;9143:15:19;;9015:13;9143:15;;;:8;:15;;;;;:21;9042:27;;9202:18;9143:21;9202:11;:18::i;:::-;8915:312;;9174:46;;-1:-1:-1;8915:312:19;-1:-1:-1;;8915:312:19:o;882:18:20:-;;;;;;;;;;;;;;-1:-1:-1;;882:18:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3701:232:19:-;3799:10;3769:4;3819:23;;;:18;:23;;;;;;;;-1:-1:-1;;;;;3819:32:19;;;;;;;;;;:41;;;3875:30;3769:4;;3799:10;;;3875:30;;;;3854:6;;3875:30;;;;;;;;;;3922:4;3915:11;;;3701:232;;;;;:::o;14673:135::-;14797:3;;-1:-1:-1;;;;;14797:3:19;14673:135;;:::o;10296:194::-;-1:-1:-1;;;;;10438:15:19;;10382:14;10438:15;;;:8;:15;;;;;10470:13;;;10296:194;;;;:::o;683:23:20:-;;;-1:-1:-1;;;683:23:20;;;;;:::o;1164:26::-;;;;:::o;9280:203:19:-;9362:27;9391;9458:18;9470:5;9458:11;:18::i;:::-;9430:46;;;;-1:-1:-1;9280:203:19;-1:-1:-1;;9280:203:19:o;1328:51::-;1369:10;1328:51;:::o;5454:281::-;545:1:22;528:18;;;;;;;;5573:4:19;;5593:24;5613:3;5593:19;:24::i;:::-;5627:46;5644:10;5656:3;5661;5666:6;5627:16;:46::i;:::-;5683:24;5703:3;5683:19;:24::i;:::-;5724:4;5717:11;;650:13:22;;634:12;:29;613:107;;;;-1:-1:-1;;;613:107:22;;;;;;;;;5454:281:19;;;;;;:::o;11408:623::-;11495:29;;:::i;:::-;-1:-1:-1;;;;;11566:15:19;;11540:23;11566:15;;;:8;:15;;;;;;;;;11605:13;;11591:27;;11644:15;;;;11628:13;;;:31;;;;11687:17;;;;11669:15;;;:35;;;;11728:13;;;;11714:11;;;:27;11775:23;;;;11751:21;;;:47;11834:29;11566:15;11834:20;:29::i;:::-;11809:22;;;:54;-1:-1:-1;;;;;;11915:19:19;;11874:38;11915:19;;;:12;:19;;;;;11971:30;11944:24;;;:57;11408:623;;;:::o;8509:186::-;545:1:22;528:18;;;;;;;;8574:4:19;;8590:36;8608:10;8620:5;8590:17;:36::i;:::-;8636:31;8656:10;8636:19;:31::i;:::-;8684:4;8677:11;;650:13:22;;634:12;:29;613:107;;;;-1:-1:-1;;;613:107:22;;;;;;;;7205:206:19;545:1:22;528:18;;;;;;;;7257:4:19;;7287:10;7307:24;7287:10;7307:19;:24::i;:::-;-1:-1:-1;;;;;7361:13:19;;;;;;:8;:13;;;;;:21;;;7341:42;;7356:3;;7341:14;:42::i;:::-;7400:4;7393:11;;;650:13:22;;634:12;:29;613:107;;;;-1:-1:-1;;;613:107:22;;;;;;;;;7205:206:19;;:::o;1066:23:20:-;;;;:::o;1210:57:19:-;-1:-1:-1;;1210:57:19;:::o;6057:278::-;545:1:22;528:18;;;;;;;;6176:4:19;;6196:36;6214:10;6226:5;6196:17;:36::i;:::-;6242:24;6255:10;6242:12;:24::i;:::-;6276:31;6296:10;6276:19;:31::i;:::-;6324:4;6317:11;;650:13:22;;634:12;:29;613:107;;;;-1:-1:-1;;;613:107:22;;;;;;;;;6057:278:19;;;;;:::o;8753:104::-;8835:4;:11;-1:-1:-1;;8835:15:19;8753:104;:::o;15156:148::-;719:9:16;:7;:9::i;:::-;711:54;;;;-1:-1:-1;;;711:54:16;;;;;;;;;292:11:15;;-1:-1:-1;;;292:11:15;;;;:19;;307:4;292:19;271:117;;;;-1:-1:-1;;;271:117:15;;;;;;;;;15236:26:19;15254:7;15236:17;:26::i;:::-;15277:20;15289:7;15277:20;;;;;;;;;;;;;;;15156:148;:::o;14863:236::-;719:9:16;:7;:9::i;:::-;711:54;;;;-1:-1:-1;;;711:54:16;;;;;;;;;14962:28:19;14974:15;14962:11;:28::i;:::-;14954:87;;;;-1:-1:-1;;;14954:87:19;;;;;;;;;15051:41;15069:15;15086:5;15051:17;:41::i;:::-;14863:236;;:::o;2495:58:20:-;;;;;;;;;;;;;:::o;1520:850:19:-;1708:11;;-1:-1:-1;;;1708:11:19;;;;1707:12;1699:66;;;;-1:-1:-1;;;1699:66:19;;;;;;;;;1775:24;:22;:24::i;:::-;1809:6;:19;;-1:-1:-1;;;;;;1809:19:19;1818:10;1809:19;;;;1838:17;;1865:12;:4;1872:5;;1865:12;:::i;:::-;-1:-1:-1;1887:16:19;:6;1896:7;;1887:16;:::i;:::-;-1:-1:-1;1913:8:19;:20;;;1200:4;1943:25;:64;2017:3;:24;;-1:-1:-1;;;;;;2017:24:19;-1:-1:-1;;;;;2017:24:19;;;;;;;;;;;2066:16;;;-1:-1:-1;;;2066:16:19;;;;:3;;;;;:14;;:16;;;;;;;;;;;;:3;:16;;;5:2:-1;;;;30:1;27;20:12;5:2;2066:16:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2066:16:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2066:16:19;;;;;;;;;2051:5;:32;;-1:-1:-1;;;;;2051:32:19;;;;-1:-1:-1;;;;;;2051:32:19;;;;;;;;;2153:38;;;-1:-1:-1;2153:38:19;;;2157:16;;;;;;;;2153:38;;2175:15;;;;;2153:38;2175:15;;;;;;2153:38;;;;2143:4;27:10:-1;;-1:-1;23:18;;45:23;;;2143:49:19;;;;;;;;23:18:-1;;2143:49:19;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2143:49:19;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2247:11:19;;;-1:-1:-1;;2247:8:19;:11;;-1:-1:-1;;2247:11:19;:34;2331:3;;2337:25;;2247:11;2297:66;;;;;-1:-1:-1;;;;;2331:3:19;;;;2297:66;;;;;;;;;;1520:850;;;;;;:::o;12085:377::-;12168:25;;:::i;:::-;12205:34;12242:15;;;:8;:15;;;;;;;;12284:20;;12267:37;;12333:22;;;;12314:16;;;:41;;;;12400:32;;;;12387:46;;:12;:46::i;:::-;12366:18;;;:67;-1:-1:-1;12085:377:19;;;:::o;698:157:17:-;782:66;698:157;:::o;1233:30:20:-;;;-1:-1:-1;;;;;1233:30:20;;:::o;8128:329:19:-;545:1:22;528:18;;;;;;;;8321:42:19;;;;;;;;;;;;;;;;;;8288:13;;528:18:22;8321:42:19;;;8339:10;;;;;;8321:42;;;;8339:10;;8321:42;8339:10;8321:42;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;8321:42:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8351:11:19;;-1:-1:-1;8351:11:19;;;;8321:42;;;8351:11;;8321:42;8351:11;8321:42;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;8321:17:19;;-1:-1:-1;;;8321:42:19:i;:::-;8313:50;;8377:11;8373:78;;;8404:36;8422:10;8434:5;8404:17;:36::i;:::-;650:13:22;;634:12;:29;613:107;;;;-1:-1:-1;;;613:107:22;;;;;;;;;8128:329:19;;;;;;;;:::o;2412:43:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2257:73::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;200:3295:26:-;3374:13;242:12;3424:64;;11014:336:19;11063:18;;:::i;:::-;11093:26;11151:38;11164:24;;11151:12;:38::i;:::-;11218:125;;;;;;;;;11261:11;;11218:125;;11129:60;;11218:125;;;;;-1:-1:-1;11014:336:19;:::o;2494:113::-;-1:-1:-1;;;;;2577:15:19;2551:7;2577:15;;;:8;:15;;;;;:23;;;;2494:113::o;1300:137:16:-;719:9;:7;:9::i;:::-;711:54;;;;-1:-1:-1;;;711:54:16;;;;;;;;;1398:1;1382:6;;1361:40;;-1:-1:-1;;;;;1382:6:16;;;;1361:40;;1398:1;;1361:40;1428:1;1411:19;;-1:-1:-1;;;;;;1411:19:16;;;1300:137::o;1435:39:20:-;;;;:::o;10550:213:19:-;-1:-1:-1;;;;;10695:15:19;;10639:14;10695:15;;;:8;:15;;;;;10727:29;10695:15;10727:20;:29::i;:::-;10720:36;10550:213;-1:-1:-1;;;10550:213:19:o;4861:283::-;545:1:22;528:18;;;;;;;;4967:4:19;;4987:24;5007:3;4987:19;:24::i;:::-;-1:-1:-1;;;;;5060:13:19;;;;;;:8;:13;;;;;:21;;;5021:61;;5038:10;;5050:3;;5055;;5021:16;:61::i;:::-;5092:24;5112:3;5092:19;:24::i;515:77:16:-;553:7;579:6;-1:-1:-1;;;;;579:6:16;515:77;:::o;866:90::-;906:4;943:6;-1:-1:-1;;;;;943:6:16;929:10;:20;;866:90::o;972:20:20:-;;;;;;;;;;;;;;;-1:-1:-1;;972:20:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5821:174:19;545:1:22;528:18;;;;;;;;5886:4:19;;5902:24;5915:10;5902:12;:24::i;4538:265::-;545:1:22;528:18;;;;;;;;4603:4:19;;4633:10;4653:24;4633:10;4653:19;:24::i;:::-;-1:-1:-1;;;;;4719:13:19;;;;;;:8;:13;;;;;:21;;;4687:54;;4704:3;;;;4714;;4687:16;:54::i;:::-;4751:24;4771:3;4751:19;:24::i;4193:291::-;545:1:22;528:18;;;;;;;;4295:4:19;;4329:10;4349:24;4329:10;4349:19;:24::i;:::-;4383:39;4400:3;4405;4410;4415:6;4383:16;:39::i;:::-;4432:24;4452:3;4432:19;:24::i;:::-;4473:4;4466:11;;;650:13:22;;634:12;:29;613:107;;;;-1:-1:-1;;;613:107:22;;;;;;;;656:21:20;;;-1:-1:-1;;;;;656:21:20;;:::o;6407:390:19:-;545:1:22;528:18;;;;;;;;6606:42:19;;;;;;;;;;;;;;;;;;6574:4;;528:18:22;6574:4:19;;6606:42;;;;6624:10;;;;;;6606:42;;;6624:10;;6606:42;6624:10;6606:42;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;6606:42:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6636:11:19;;-1:-1:-1;6636:11:19;;;;6606:42;;;6636:11;;6606:42;6636:11;6606:42;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;6606:17:19;;-1:-1:-1;;;6606:42:19:i;:::-;6590:58;;6658:36;6676:10;6688:5;6658:17;:36::i;:::-;6704:24;6717:10;6704:12;:24::i;:::-;6738:31;6758:10;6738:19;:31::i;:::-;6786:4;6779:11;;;650:13:22;;634:12;:29;613:107;;;;-1:-1:-1;;;613:107:22;;;;;;;;784:28:20;;;;:::o;2146:40::-;;;;:::o;10817:137:19:-;545:1:22;528:18;;;;;;;;10884:4:19;;10900:26;10920:5;10900:19;:26::i;7471:276::-;545:1:22;528:18;;;;;;;;7593:4:19;;7627:10;7647:24;7627:10;7647:19;:24::i;:::-;7681:38;7696:8;7706:12;7681:14;:38::i;12998:1620::-;545:1:22;528:18;;;;;;;;719:9:16;:7;:9::i;:::-;711:54;;;;-1:-1:-1;;;711:54:16;;;;;;;;;13286:5:19;;13243:31;;;-1:-1:-1;;;13243:31:19;;;;13192:19;;-1:-1:-1;;;;;13286:5:19;;;;13243:29;;;;;;:31;;;;;;;;;;;;;;;:29;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;13243:31:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13243:31:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13243:31:19;;;;;;;;;-1:-1:-1;;;;;13243:49:19;;13222:146;;;;-1:-1:-1;;;13222:146:19;;;;;;;;;13407:3;;;-1:-1:-1;;;;;13420:24:19;;;-1:-1:-1;;;;;;13420:24:19;;;;;;13555:11;;13531:36;;-1:-1:-1;;;13531:36:19;;13407:3;;;;;13378:26;;13407:3;;13531:23;;:36;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13531:36:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13531:36:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13531:36:19;;;;;;;;;13636:5;;13658:3;;13664:11;;13636:40;;-1:-1:-1;;;13636:40:19;;13505:62;;-1:-1:-1;;;;;;13636:5:19;;;;:13;;:40;;13658:3;;13664:11;13636:40;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13636:40:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13636:40:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13636:40:19;;;;;;;;;13628:73;;;;-1:-1:-1;;;13628:73:19;;;;;;;;;13738:3;;13759:11;;13738:33;;-1:-1:-1;;;13738:33:19;;13711:24;;-1:-1:-1;;;;;13738:3:19;;:20;;:33;;13759:11;13738:33;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13738:33:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13738:33:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13738:33:19;;;;;;;;;14362:25;;13711:60;;-1:-1:-1;14425:97:19;13711:60;14425:62;:15;14362:25;14425:62;:32;:62;:::i;:::-;:79;:97;:79;:97;:::i;:::-;14397:25;:125;;;14538:73;;;;;;14564:19;;14397:125;14538:73;;;;;;;;;;775:1:16;;;;;650:13:22;;634:12;:29;613:107;;;;-1:-1:-1;;;613:107:22;;;;;;;;12697:234:19;12851:24;;12777:15;;12895:29;12851:24;12895:12;:29::i;:::-;12885:39;;12697:234;;:::o;6939:214::-;545:1:22;528:18;;;;;;;;7008:4:19;;7038:10;7058:24;7038:10;7058:19;:24::i;:::-;7092:33;7107:3;7112:12;7092:14;:33::i;2885:169::-;-1:-1:-1;;;;;3013:25:19;;;2983:7;3013:25;;;:18;:25;;;;;;;;:34;;;;;;;;;;;;;2885:169::o;1385:51::-;1434:2;1385:51;:::o;2589:50:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1586:107:16:-;719:9;:7;:9::i;:::-;711:54;;;;-1:-1:-1;;;711:54:16;;;;;;;;;1658:28;1677:8;1658:18;:28::i;:::-;1586:107;:::o;1299:19:20:-;;;-1:-1:-1;;;;;1299:19:20;;:::o;9985:254:19:-;-1:-1:-1;;;;;10130:15:19;;10074:14;10130:15;;;:8;:15;;;;;10185:23;;;;10074:14;;10172:37;;:12;:37::i;:::-;10155:54;9985:254;-1:-1:-1;;;;9985:254:19:o;32486:781::-;-1:-1:-1;;;;;32575:15:19;;;32549:23;32575:15;;;:8;:15;;;;;;;;32635:12;:19;;;;;32673:3;;:20;;-1:-1:-1;;;32673:20:19;;;;32575:15;;32635:19;;32673:3;;;:18;;:20;;;;;32575:15;;32673:20;;;;;;;;:3;:20;;;5:2:-1;;;;30:1;27;20:12;5:2;32673:20:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32673:20:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;32673:20:19;;;;;;;;;32665:54;;;;-1:-1:-1;;;32665:54:19;;;;;;;;;32729:22;32754:29;32775:7;32754:20;:29::i;:::-;32729:54;-1:-1:-1;32798:18:19;;32794:467;;32859:41;;:78;;32922:14;32859:78;:62;:78;:::i;:::-;32832:105;;32971:17;;;;:37;;32993:14;32971:37;:21;:37;:::i;:::-;32951:17;;;:57;33040:15;;;;:35;;33060:14;33040:35;:19;:35;:::i;:::-;33022:15;;;:53;33103:11;;:31;;33119:14;33103:31;:15;:31;:::i;:::-;33089:11;:45;33153:35;;-1:-1:-1;;;;;33153:35:19;;;;;;;33173:14;;33153:35;;;;;;;;;;33228:5;-1:-1:-1;;;;;33207:43:19;33224:1;-1:-1:-1;;;;;33207:43:19;-1:-1:-1;;;;;;;;;;;33235:14:19;33207:43;;;;;;;;;;;;;;;32794:467;32486:781;;;;:::o;19933:1119::-;20051:10;20016:23;20042:20;;;:8;:20;;;;;20080:16;20072:57;;;;-1:-1:-1;;;20072:57:19;;;;;;;;;20176:7;:15;;;20160:12;:31;;20139:106;;;;-1:-1:-1;;;20139:106:19;;;;;;;;;20256:23;20282:83;20319:10;20343:12;20282:23;:83::i;:::-;20453:15;;;;20256:109;;-1:-1:-1;20453:33:19;;20473:12;20453:33;:19;:33;:::i;:::-;20435:15;;;:51;;;20500:17;;;;:35;20496:101;;;20571:15;;;;20551:17;;;:35;20496:101;20620:11;;:29;;20636:12;20620:29;:15;:29;:::i;:::-;20606:11;:43;20695:24;;:42;-1:-1:-1;20691:175:19;;;20753:24;:43;;;;;;;20691:175;;;20854:1;20827:24;:28;20691:175;20919:5;;:38;;-1:-1:-1;;;20919:38:19;;-1:-1:-1;;;;;20919:5:19;;;;:14;;:38;;20934:8;;20944:12;;20919:38;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20919:38:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20919:38:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20919:38:19;;;;;;;;;20911:72;;;;-1:-1:-1;;;20911:72:19;;;;;;;;;20999:46;;21028:1;;21008:10;;-1:-1:-1;;;;;;;;;;;20999:46:19;;;21032:12;;20999:46;;9489:436;9571:27;;9643:10;;;;;:34;;;-1:-1:-1;;9657:5:19;:20;;9643:34;9639:280;;;9693:14;;:::i;:::-;9710:4;9715:5;9710:11;;;;;;;;;;;;;;;;;;9693:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9693:28:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9748:3;:14;;;9735:27;;9790:3;:15;;;9776:29;;9639:280;;;;-1:-1:-1;;9849:16:19;;;9863:1;9849:16;;;;;;9893:15;;;;;;;;;9849:16;9639:280;9489:436;;;:::o;15753:2561::-;15910:3;-1:-1:-1;;;;;15903:10:19;:3;-1:-1:-1;;;;;15903:10:19;;;15895:47;;;;-1:-1:-1;;;15895:47:19;;;;;;;;;-1:-1:-1;;;;;15974:13:19;;;;;;:8;:13;;;;;:21;;;:31;-1:-1:-1;15974:31:19;15953:108;;;;-1:-1:-1;;;15953:108:19;;;;;;;;;16136:25;-1:-1:-1;;;;;16179:14:19;;;;;;;16175:159;;;-1:-1:-1;;;16175:159:19;;;-1:-1:-1;;;;;;16291:23:19;;;;;;;:18;:23;;;;;;;;:32;;;;;;;;;;16175:159;16385:6;16364:17;:27;;16343:107;;;;-1:-1:-1;;;16343:107:19;;;;;;;;;16526:20;16549:29;:17;16571:6;16549:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;16611:13:19;;16588:20;16611:13;;;:8;:13;;;;;:21;;;16526:52;;-1:-1:-1;16588:20:19;16611:33;;16637:6;16611:33;:25;:33;:::i;:::-;-1:-1:-1;;;;;16677:13:19;;16654:20;16677:13;;;:8;:13;;;;;:21;;;16588:56;;-1:-1:-1;16654:20:19;16677:33;;16703:6;16677:33;:25;:33;:::i;:::-;-1:-1:-1;;;;;16924:13:19;;;16886:12;16924:13;;;:8;:13;;;;;;:19;16901:13;;;;;;;:19;16654:56;;-1:-1:-1;16901:42:19;;;16997:24;;;;:64;;-1:-1:-1;;;;;;17037:13:19;;;;;;:8;:13;;;;;:19;:24;16997:64;:114;;;;-1:-1:-1;;;;;;17077:13:19;;;;;;:8;:13;;;;;:19;-1:-1:-1;;17077:34:19;;16997:114;16992:190;;;-1:-1:-1;;;;;17151:13:19;;;;;;:8;:13;;;;;:19;17128:43;;17146:3;;17128:17;:43::i;:::-;-1:-1:-1;;;;;17192:13:19;;;;;;;:8;:13;;;;;;:21;;;;:36;;;17238:13;;;;;;;:21;:36;;;-1:-1:-1;;17344:32:19;;17340:110;;-1:-1:-1;;;;;17392:23:19;;;;;;;:18;:23;;;;;;;;:32;;;;;;;;;:47;;;17340:110;17500:7;17495:354;;17523:32;17558:84;17601:3;17622:6;17558:25;:84::i;:::-;17523:119;;17656:54;17672:3;17677:6;17685:24;17656:15;:54::i;:::-;17495:354;;;;-1:-1:-1;;;;;17810:13:19;;;;;;:8;:13;;;;;:19;17784:54;;17800:3;;17805;;17831:6;17784:15;:54::i;:::-;-1:-1:-1;;;;;18132:13:19;;;;;;:8;:13;;;;;:21;;;;18106:23;;;;;:47;18102:125;;;-1:-1:-1;;;;;18195:13:19;;;;;;:8;:13;;;;;:21;;;;18169:23;;;;:47;18102:125;18295:3;-1:-1:-1;;;;;18281:26:19;18290:3;-1:-1:-1;;;;;18281:26:19;-1:-1:-1;;;;;;;;;;;18300:6:19;18281:26;;;;;;;;;;;;;;;15753:2561;;;;;;;;;:::o;23703:518::-;23805:7;23828:14;23845:37;23858:7;:23;;;23845:12;:37::i;:::-;23828:54;;23906:36;23924:7;:17;;;23906:7;:13;;;:17;;:36;;;;:::i;:::-;23896:6;:47;23892:323;;;24072:7;:17;;;24056:7;:13;;;24047:6;:22;:42;24040:49;;;;;23892:323;24203:1;24196:8;;;;;22842:791;-1:-1:-1;;22926:5:19;:20;:43;;;-1:-1:-1;22958:4:19;:11;22950:19;;22926:43;22918:70;;;;-1:-1:-1;;;22918:70:19;;;;;;;;;-1:-1:-1;;;;;23024:15:19;;22998:23;23024:15;;;:8;:15;;;;;;;;23068:13;;23128:18;;;:8;:18;;;;;;23193:15;;;;;;;23218:21;;;-1:-1:-1;23253:15:19;;;:19;23249:259;;23288:32;23323:95;23366:5;23389:7;:15;;;23323:25;:95::i;:::-;23288:130;;23432:65;23448:5;23455:7;:15;;;23472:24;23432:15;:65::i;:::-;23249:259;;23517:25;;-1:-1:-1;;23517:25:19;;;23552;;23541:1;23552:25;;;23592:34;;23620:5;;23610:8;;-1:-1:-1;;;;;23592:34:19;;;;;23517:20;;23592:34;22842:791;;;;;;:::o;18544:1069::-;18626:5;;:42;;-1:-1:-1;;;18626:42:19;;18672:10;;-1:-1:-1;;;;;18626:5:19;;:15;;:42;;18642:10;;18662:4;;18626:42;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18626:42:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18626:42:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18626:42:19;;;;;;;;;:56;;18605:123;;;;-1:-1:-1;;;18605:123:19;;;;;;;;;18774:10;18739:23;18765:20;;;:8;:20;;;;;;;18836:5;;:57;;-1:-1:-1;;;18836:57:19;;18765:20;;-1:-1:-1;;;;;18836:5:19;;;;:18;;:57;;18774:10;18875:4;;18882:10;;18836:57;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18836:57:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18836:57:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18836:57:19;;;;;;;;;18828:91;;;;-1:-1:-1;;;18828:91:19;;;;;;;;;18937:5;;18959:3;;18937:39;;-1:-1:-1;;;18937:39:19;;-1:-1:-1;;;;;18937:5:19;;;;:13;;:39;;18959:3;;;18965:10;;18937:39;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18937:39:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18937:39:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18937:39:19;;;;;;;;;18929:72;;;;-1:-1:-1;;;18929:72:19;;;;;;;;;19038:3;;:32;;-1:-1:-1;;;19038:32:19;;19011:24;;-1:-1:-1;;;;;19038:3:19;;:20;;:32;;19059:10;;19038:32;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19038:32:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19038:32:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;19038:32:19;;;;;;;;;19143:11;;19011:59;;-1:-1:-1;19143:27:19;;19159:10;19143:27;:15;:27;:::i;:::-;19129:11;:41;19198:15;;;;:31;;19218:10;19198:31;:19;:31;:::i;:::-;19180:15;;;:49;19298:24;;:46;;19327:16;19298:46;:28;:46;:::i;:::-;19271:24;:73;19414:24;19441:38;19462:16;19441:20;:38::i;:::-;19414:65;;19489:57;19505:10;19517;19529:16;19489:15;:57::i;:::-;19562:44;;19583:10;;19579:1;;-1:-1:-1;;;;;;;;;;;19562:44:19;;;19595:10;;19562:44;;180:513:17;410:10;-1:-1:-1;;;;;400:35:17;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;400:37:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;400:37:17;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;400:37:17;;;;;;;;;296:66;267:170;246:231;;;;-1:-1:-1;;;246:231:17;;;;;;;;;569:66;545:132;496:191::o;34161:155:19:-;34268:17;34301:8;;;34161:155::o;411:66:15:-;452:11;:18;;-1:-1:-1;;;;452:18:15;-1:-1:-1;;;452:18:15;;;411:66::o;34755:605:19:-;34840:15;35251:102;35327:25;;35251:58;35284:3;;;;;;;;;-1:-1:-1;;;;;35284:3:19;-1:-1:-1;;;;;35284:22:19;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35284:24:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;35284:24:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;35284:24:19;;;;;;;;;35251:15;;:58;:32;:58;:::i;21244:1465::-;21369:13;21394:9;21442:1;21422:10;:17;:21;21414:69;;;;-1:-1:-1;;;21414:69:19;;;;;;;;;1434:2;21501:10;:17;:43;;21493:106;;;;-1:-1:-1;;;21493:106:19;;;;;;;;;21651:11;:18;21630:10;:17;:39;21609:118;;;;-1:-1:-1;;;21609:118:19;;;;;;;;;-1:-1:-1;21886:24:19;;21924:400;21940:10;:17;21936:1;:21;21924:400;;;22020:1;22003:11;22015:1;22003:14;;;;;;;;;;;;;;:18;;;21978:124;;;;-1:-1:-1;;;21978:124:19;;;;;;;;;22149:1;-1:-1:-1;;;;;22124:27:19;:10;22135:1;22124:13;;;;;;;;;;;;;;-1:-1:-1;;;;;22124:27:19;;;22116:80;;;;-1:-1:-1;;;22116:80:19;;;;;;;;;22298:11;22310:1;22298:14;;;;;;;;;;;;;;22290:23;;22270:43;;;;21959:3;;;;;21924:400;;;22342:1;22338:5;;22333:276;22349:11;:18;22345:1;:22;22333:276;;;22568:16;1369:10;22520:24;;22502:11;22514:1;22502:14;;;;;;;;;;;;;;22494:23;;:50;22493:91;;;;;;22388:11;22400:1;22388:14;;;;;;;;;;;;;:210;;;;;;;;;;;22369:3;;;;;22333:276;;;22637:28;;;;;;;;;;;;;;;;;;;22627:4;27:10:-1;;22669:1:19;23:18:-1;;;45:23;;;-1:-1;22627:39:19;;;;;;;;22669:1;;23:18:-1;;22627:39:19;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;22627:39:19;;;;;;;;;;;;;;;;:::i;:::-;;;;:43;22619:51;;22696:5;22685:17;;;;;;;;;;21244:1465;;;;;;:::o;35724:247::-;35806:23;35848:116;1127:4;35848:58;35881:3;;;;;;;;;-1:-1:-1;;;;;35881:3:19;-1:-1:-1;;;;;35881:22:19;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2159:459:31;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:31;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:31;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;1794:259:16:-;-1:-1:-1;;;;;1880:22:16;;1859:107;;;;-1:-1:-1;;;1859:107:16;;;;;;;;;2002:6;;;1981:38;;-1:-1:-1;;;;;1981:38:16;;;;2002:6;;;1981:38;;;2029:6;:17;;-1:-1:-1;;;;;;2029:17:16;-1:-1:-1;;;;;2029:17:16;;;;;;;;;;1794:259::o;834:176:31:-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:31;;;;;;;;28292:322:19;28448:3;;:29;;-1:-1:-1;;;28448:29:19;;28391:23;;-1:-1:-1;;;;;28448:3:19;;:20;;:29;;28469:7;;28448:29;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28448:29:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28448:29:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;28448:29:19;;;;;;;;;28430:47;;28487:23;28513:37;28534:15;28513:20;:37::i;:::-;28487:63;;28560:47;28575:5;28582:7;28591:15;28560:14;:47::i;1274:134:31:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;27514:360:19:-;27715:3;;:20;;;-1:-1:-1;;;27715:20:19;;;;27615:23;;-1:-1:-1;;;;;27715:3:19;;:18;;:20;;;;;;;;;;;;;;27615:23;27715:3;:20;;;5:2:-1;;;;30:1;27;20:12;5:2;27715:20:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27715:20:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;27715:20:19;;;;;;;;;27707:54;;;;-1:-1:-1;;;27707:54:19;;;;;;;;;27789:21;27802:7;27789:12;:21::i;:::-;27771:39;;27820:47;27835:5;27842:7;27851:15;27820:14;:47::i;24740:2347::-;-1:-1:-1;;;;;24897:15:19;;24871:23;24897:15;;;:8;:15;;;;;24945:13;;24897:15;;24871:23;24940:4;;-1:-1:-1;;24945:28:19;:72;;25004:13;;24945:72;;;24988:1;24945:72;24940:78;;;;;;;;;;;;;;;;;;;;25051:21;;24940:78;;-1:-1:-1;25051:25:19;25047:2034;;-1:-1:-1;25092:13:19;25108:7;25153:15;25182:1545;25198:15;;;:22;25194:26;;25182:1545;;;25245:24;25272:3;:14;;25287:1;25272:17;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25272:17:19;25342:26;;;:8;:26;;;;;;25272:17;25415:15;;:22;25272:17;;-1:-1:-1;25342:26:19;-1:-1:-1;;25415:26:19;;;25409:33;;;;25548:117;;1369:10;25614:51;;25615:31;25627:3;:15;;25643:1;25627:18;;;;;;;;;;;;;;;;;;;;;25615:7;;25627:18;;;;;;;;;;;;;25615:11;:31;:::i;:::-;25614:51;;;;;;25548:117;;;25586:5;25548:117;-1:-1:-1;;;;;25779:37:19;;;;;;:19;;;:37;;;;;;25523:142;;-1:-1:-1;25779:78:19;;25523:142;25779:78;:62;:78;:::i;:::-;-1:-1:-1;;;;;25739:37:19;;;;;;:19;;;:37;;;;;:118;25900:22;;;;:63;;25948:14;25900:63;:47;:63;:::i;:::-;25875:22;;;:88;26036:32;26046:5;26053:14;26036:9;:32::i;:::-;26028:40;;26154:32;26189:15;:133;;1369:10;26263:59;;26264:39;26284:3;:15;;26300:1;26284:18;;;;;;;26264:39;26263:59;;;;;;26189:133;;;26227:13;26189:133;26375:32;;;;26154:168;;-1:-1:-1;26375:83:19;;26154:168;26375:83;:57;:83;:::i;:::-;26340:32;;;:118;26539:50;26549:13;26564:24;26539:9;:50::i;:::-;26523:66;;26608:104;26625:5;26632:16;26650:7;:13;;;26665:4;26671:14;26687:24;26608:16;:104::i;:::-;25182:1545;;;;;25222:3;;;;;25182:1545;;;25047:2034;;;;;26851:13;;;;:26;;26869:7;26851:26;:17;:26;:::i;:::-;26835:13;;;:42;26917:23;;;;:61;;26962:15;26917:61;:44;:61;:::i;:::-;26891:23;;;:87;27024:13;;26993:77;;27010:5;;;;27039:4;27045:7;27054:15;26993:16;:77::i;:::-;24740:2347;;;;;;:::o;31517:867::-;31713:3;;;;;;;;;-1:-1:-1;;;;;31713:3:19;-1:-1:-1;;;;;31713:18:19;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31713:20:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31713:20:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;31713:20:19;;;;;;;;;31705:54;;;;-1:-1:-1;;;31705:54:19;;;;;;;;;-1:-1:-1;;;;;31799:13:19;;;31770:26;31799:13;;;:8;:13;;;;;;31851;;;;;;;;31901:21;31914:7;31901:12;:21::i;:::-;31875:47;;31952:36;31962:10;:16;;;31980:7;31952:9;:36::i;:::-;31933:16;;;:55;32037:26;;;;32027:54;;32065:15;32027:9;:54::i;:::-;31998:26;;;:83;32091:66;32108:3;;32118:5;32125;32132:7;32141:15;32091:16;:66::i;:::-;32187:16;;;;:29;;32208:7;32187:29;:20;:29;:::i;:::-;32168:16;;;:48;32255:26;;;;:47;;32286:15;32255:47;:30;:47;:::i;:::-;32226:26;;;:76;32312:65;32329:3;;32339:5;32346:4;32352:7;32361:15;32312:16;:65::i;:::-;31517:867;;;;;;;:::o;36053:311::-;36143:23;36240:117;1127:4;36240:59;36273:25;;36240:15;:32;;:59;;;;:::i;3718:338:31:-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:31;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:31:o;28897:2385:19:-;-1:-1:-1;;;;;29053:15:19;;29027:23;29053:15;;;:8;:15;;;;;29101:13;;29053:15;;29027:23;29096:4;;-1:-1:-1;;29101:28:19;:72;;29160:13;;29101:72;;;29144:1;29101:72;29096:78;;;;;;;;;;;;;;;;;;;;;29188:21;;29096:78;;-1:-1:-1;29188:25:19;29184:2092;;29245:7;29290:15;29229:13;29342:1583;29358:15;;;:22;29354:26;;29342:1583;;;29405:24;29432:3;:14;;29447:1;29432:17;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29432:17:19;29502:26;;;:8;:26;;;;;;29432:17;29575:15;;:22;29432:17;;-1:-1:-1;29502:26:19;-1:-1:-1;;29575:26:19;;;29569:33;;;;29715:117;;1369:10;29781:51;;29782:31;29794:3;:15;;29810:1;29794:18;;;;;;;29782:31;29781:51;;;;;;29715:117;;;29753:5;29715:117;29690:142;;29875:90;29906:16;:22;;;29950:14;29875:9;:90::i;:::-;29850:22;;;:115;-1:-1:-1;;;;;30054:37:19;;;;;;:19;;;:37;;;;;;30023:105;;30113:14;30023:9;:105::i;:::-;-1:-1:-1;;;;;29983:37:19;;;;;;:19;;;:37;;;;;:145;30200:32;30210:5;30217:14;30200:9;:32::i;:::-;30192:40;;30323:32;30358:15;:133;;1369:10;30432:59;;30433:39;30453:3;:15;;30469:1;30453:18;;;;;;;30433:39;30432:59;;;;;;30358:133;;;30396:13;30358:133;30323:168;;30544:110;30575:16;:32;;;30629:24;30544:9;:110::i;:::-;30509:32;;;:145;30736:50;30746:13;30761:24;30736:9;:50::i;:::-;30720:66;;30805:105;30822:5;30829:16;30847:7;:13;;;30862:5;30869:14;30885:24;30805:16;:105::i;:::-;29342:1583;;;;;29382:3;;;;;29342:1583;;;29184:2092;;;;;;31048:33;31058:7;:13;;;31073:7;31048:9;:33::i;:::-;31032:13;;;:49;31131:23;;;;31121:51;;31156:15;31121:9;:51::i;:::-;31095:23;;;:77;31218:13;;31187:78;;31204:5;;;;31218:13;31240:7;31249:15;31187:16;:78::i;:::-;28897:2385;;;;;:::o;1732:187:31:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:31;;;;;;;;;;-1:-1:-1;;;1888:5:31;;;1732:187::o;35432:220:19:-;35509:23;35551:94;35620:3;;;;;;;;;-1:-1:-1;;;;;35620:3:19;-1:-1:-1;;;;;35620:22:19;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35620:24:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;35620:24:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;35620:24:19;;;;;;;;;35576:25;;35551:51;;:7;;:51;:24;:51;:::i;34548:135::-;34611:7;34638:1;34634;:5;34630:46;;;-1:-1:-1;34648:1:19;34641:8;;34630:46;-1:-1:-1;34671:5:19;;;34664:12;;33273:882;33487:31;33521:8;:15;33530:5;33521:15;;;;;;;;;;;33487:49;;33587:5;33576:9;-1:-1:-1;;;;;33552:128:19;33569:5;-1:-1:-1;;;;;33552:128:19;;33606:14;33634:16;33664:15;33552:128;;;;;;;;;;;;;;;;;33695:14;33691:458;;;33747:19;;;;:41;;33771:16;33747:41;:23;:41;:::i;:::-;33725:19;;;:63;33834:29;;;;:67;;33885:15;33834:67;:50;:67;:::i;:::-;33802:29;;;:99;33691:458;;;33954:48;33964:8;:19;;;33985:16;33954:9;:48::i;:::-;33932:19;;;:70;34075:29;;;;34048:90;;34122:15;34048:9;:90::i;:::-;34016:29;;;:122;33273:882;;;;;;;:::o;149:3348:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;149:3348:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;149:3348:26;;;-1:-1:-1;149:3348:26;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;149:3348:26;-1:-1:-1;;;;;149:3348:26;;;;;;;;;;;-1:-1:-1;149:3348:26;;;;;;;-1:-1:-1;149:3348:26;;;-1:-1:-1;149:3348:26;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;149:3348:26;;;-1:-1:-1;149:3348:26;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;149:3348:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;149:3348:26;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:352;;;431:3;424:4;416:6;412:17;408:27;398:2;;449:1;446;439:12;398:2;-1:-1;469:20;;509:18;498:30;;495:2;;;541:1;538;531:12;495:2;575:4;567:6;563:17;551:29;;626:3;618:4;610:6;606:17;596:8;592:32;589:41;586:2;;;643:1;640;633:12;586:2;391:262;;;;;;1037:124;1101:20;;1126:30;1101:20;1126:30;;1168:128;1243:13;;1261:30;1243:13;1261:30;;1303:134;1381:13;;1399:33;1381:13;1399:33;;1444:186;1539:20;;1564:61;1539:20;1564:61;;1652:336;;;1767:3;1760:4;1752:6;1748:17;1744:27;1734:2;;1785:1;1782;1775:12;1734:2;-1:-1;1805:20;;1845:18;1834:30;;1831:2;;;1877:1;1874;1867:12;1831:2;1911:4;1903:6;1899:17;1887:29;;1961:3;1954;1946:6;1942:16;1932:8;1928:31;1925:40;1922:2;;;1978:1;1975;1968:12;1996:130;2063:20;;2088:33;2063:20;2088:33;;2274:241;;2378:2;2366:9;2357:7;2353:23;2349:32;2346:2;;;2394:1;2391;2384:12;2346:2;2429:1;2446:53;2491:7;2471:9;2446:53;;2522:263;;2637:2;2625:9;2616:7;2612:23;2608:32;2605:2;;;2653:1;2650;2643:12;2605:2;2688:1;2705:64;2761:7;2741:9;2705:64;;2792:366;;;2913:2;2901:9;2892:7;2888:23;2884:32;2881:2;;;2929:1;2926;2919:12;2881:2;2964:1;2981:53;3026:7;3006:9;2981:53;;;2971:63;;2943:97;3071:2;3089:53;3134:7;3125:6;3114:9;3110:22;3089:53;;;3079:63;;3050:98;2875:283;;;;;;3165:491;;;;3303:2;3291:9;3282:7;3278:23;3274:32;3271:2;;;3319:1;3316;3309:12;3271:2;3354:1;3371:53;3416:7;3396:9;3371:53;;;3361:63;;3333:97;3461:2;3479:53;3524:7;3515:6;3504:9;3500:22;3479:53;;;3469:63;;3440:98;3569:2;3587:53;3632:7;3623:6;3612:9;3608:22;3587:53;;;3577:63;;3548:98;3265:391;;;;;;3663:366;;;3784:2;3772:9;3763:7;3759:23;3755:32;3752:2;;;3800:1;3797;3790:12;3752:2;3835:1;3852:53;3897:7;3877:9;3852:53;;;3842:63;;3814:97;3942:2;3960:53;4005:7;3996:6;3985:9;3981:22;3960:53;;4036:795;;;;;;4240:2;4228:9;4219:7;4215:23;4211:32;4208:2;;;4256:1;4253;4246:12;4208:2;4291:31;;4342:18;4331:30;;4328:2;;;4374:1;4371;4364:12;4328:2;4402:80;4474:7;4465:6;4454:9;4450:22;4402:80;;;4392:90;;;;4270:218;4547:2;4536:9;4532:18;4519:32;4571:18;4563:6;4560:30;4557:2;;;4603:1;4600;4593:12;4557:2;4631:79;4702:7;4693:6;4682:9;4678:22;4631:79;;;4621:89;;;;4498:218;4747:2;4765:50;4807:7;4798:6;4787:9;4783:22;4765:50;;;4755:60;;4726:95;4202:629;;;;;;;;;4838:257;;4950:2;4938:9;4929:7;4925:23;4921:32;4918:2;;;4966:1;4963;4956:12;4918:2;5001:1;5018:61;5071:7;5051:9;5018:61;;5102:263;;5217:2;5205:9;5196:7;5192:23;5188:32;5185:2;;;5233:1;5230;5223:12;5185:2;5268:1;5285:64;5341:7;5321:9;5285:64;;5372:925;;;;;;;5595:3;5583:9;5574:7;5570:23;5566:33;5563:2;;;5612:1;5609;5602:12;5563:2;5647:1;5664:81;5737:7;5717:9;5664:81;;;5654:91;;5626:125;5810:2;5799:9;5795:18;5782:32;5834:18;5826:6;5823:30;5820:2;;;5866:1;5863;5856:12;5820:2;5894:65;5951:7;5942:6;5931:9;5927:22;5894:65;;;5884:75;;;;5761:204;6024:2;6013:9;6009:18;5996:32;6048:18;6040:6;6037:30;6034:2;;;6080:1;6077;6070:12;6034:2;6108:65;6165:7;6156:6;6145:9;6141:22;6108:65;;;6098:75;;;;5975:204;6210:2;6228:53;6273:7;6264:6;6253:9;6249:22;6228:53;;;6218:63;;6189:98;5557:740;;;;;;;;;6304:241;;6408:2;6396:9;6387:7;6383:23;6379:32;6376:2;;;6424:1;6421;6414:12;6376:2;6459:1;6476:53;6521:7;6501:9;6476:53;;6822:801;;;;;;7029:2;7017:9;7008:7;7004:23;7000:32;6997:2;;;7045:1;7042;7035:12;6997:2;7080:1;7097:53;7142:7;7122:9;7097:53;;;7087:63;;7059:97;7215:2;7204:9;7200:18;7187:32;7239:18;7231:6;7228:30;7225:2;;;7271:1;7268;7261:12;7225:2;7299:80;7371:7;7362:6;7351:9;7347:22;7299:80;;;7289:90;;;;7166:219;7444:2;7433:9;7429:18;7416:32;7468:18;7460:6;7457:30;7454:2;;;7500:1;7497;7490:12;7454:2;7528:79;7599:7;7590:6;7579:9;7575:22;7528:79;;;7518:89;;;;7395:218;6991:632;;;;;;;;;7630:366;;;7751:2;7739:9;7730:7;7726:23;7722:32;7719:2;;;7767:1;7764;7757:12;7719:2;7802:1;7819:53;7864:7;7844:9;7819:53;;8004:173;;8091:46;8133:3;8125:6;8091:46;;;-1:-1;;8166:4;8157:14;;8084:93;8186:169;;8271:44;8311:3;8303:6;8271:44;;8363:142;8454:45;8493:5;8454:45;;;8449:3;8442:58;8436:69;;;8512:103;8585:24;8603:5;8585:24;;8773:690;;8918:54;8966:5;8918:54;;;8985:86;9064:6;9059:3;8985:86;;;8978:93;;9092:56;9142:5;9092:56;;;9168:7;9196:1;9181:260;9206:6;9203:1;9200:13;9181:260;;;9273:6;9267:13;9294:63;9353:3;9338:13;9294:63;;;9287:70;;9374:60;9427:6;9374:60;;;9364:70;-1:-1;;9228:1;9221:9;9181:260;;;-1:-1;9454:3;;8897:566;-1:-1;;;;;8897:566;9500:682;;9643:53;9690:5;9643:53;;;9709:85;9787:6;9782:3;9709:85;;;9702:92;;9815:55;9864:5;9815:55;;;9890:7;9918:1;9903:257;9928:6;9925:1;9922:13;9903:257;;;9995:6;9989:13;10016:61;10073:3;10058:13;10016:61;;;10009:68;;10094:59;10146:6;10094:59;;;10084:69;-1:-1;;9950:1;9943:9;9903:257;;10190:104;10267:21;10282:5;10267:21;;10301:113;10384:24;10402:5;10384:24;;10421:182;10532:65;10591:5;10532:65;;10775:347;;10887:39;10920:5;10887:39;;;10938:71;11002:6;10997:3;10938:71;;;10931:78;;11014:52;11059:6;11054:3;11047:4;11040:5;11036:16;11014:52;;;11087:29;11109:6;11087:29;;;11078:39;;;;10867:255;-1:-1;;;10867:255;11476:364;;11636:67;11700:2;11695:3;11636:67;;;-1:-1;;;11716:87;;11831:2;11822:12;;11622:218;-1:-1;;11622:218;12222:465;;12382:67;12446:2;12441:3;12382:67;;;12482:66;12462:87;;-1:-1;;;12578:2;12569:12;;12562:88;12678:2;12669:12;;12368:319;-1:-1;;12368:319;12696:364;;12856:67;12920:2;12915:3;12856:67;;;-1:-1;;;12936:87;;13051:2;13042:12;;12842:218;-1:-1;;12842:218;13442:465;;13602:67;13666:2;13661:3;13602:67;;;13702:66;13682:87;;-1:-1;;;13798:2;13789:12;;13782:88;13898:2;13889:12;;13588:319;-1:-1;;13588:319;13916:364;;14076:67;14140:2;14135:3;14076:67;;;14176:66;14156:87;;14271:2;14262:12;;14062:218;-1:-1;;14062:218;14289:364;;14449:67;14513:2;14508:3;14449:67;;;-1:-1;;;14529:87;;14644:2;14635:12;;14435:218;-1:-1;;14435:218;14662:364;;14822:67;14886:2;14881:3;14822:67;;;14922:66;14902:87;;15017:2;15008:12;;14808:218;-1:-1;;14808:218;15408:465;;15568:67;15632:2;15627:3;15568:67;;;15668:66;15648:87;;-1:-1;;;15764:2;15755:12;;15748:88;15864:2;15855:12;;15554:319;-1:-1;;15554:319;15882:364;;16042:67;16106:2;16101:3;16042:67;;;-1:-1;;;16122:87;;16237:2;16228:12;;16028:218;-1:-1;;16028:218;16255:465;;16415:67;16479:2;16474:3;16415:67;;;16515:66;16495:87;;-1:-1;;;16611:2;16602:12;;16595:88;16711:2;16702:12;;16401:319;-1:-1;;16401:319;16729:465;;16889:67;16953:2;16948:3;16889:67;;;16989:66;16969:87;;-1:-1;;;17085:2;17076:12;;17069:88;17185:2;17176:12;;16875:319;-1:-1;;16875:319;18322:364;;18482:67;18546:2;18541:3;18482:67;;;18582:66;18562:87;;18677:2;18668:12;;18468:218;-1:-1;;18468:218;18695:364;;18855:67;18919:2;18914:3;18855:67;;;18955:66;18935:87;;19050:2;19041:12;;18841:218;-1:-1;;18841:218;19068:465;;19228:67;19292:2;19287:3;19228:67;;;19328:66;19308:87;;-1:-1;;;19424:2;19415:12;;19408:88;19524:2;19515:12;;19214:319;-1:-1;;19214:319;19542:364;;19702:67;19766:2;19761:3;19702:67;;;-1:-1;;;19782:87;;19897:2;19888:12;;19688:218;-1:-1;;19688:218;21508:465;;21668:67;21732:2;21727:3;21668:67;;;21768:66;21748:87;;-1:-1;;;21864:2;21855:12;;21848:88;21964:2;21955:12;;21654:319;-1:-1;;21654:319;21982:364;;22142:67;22206:2;22201:3;22142:67;;;22242:66;22222:87;;22337:2;22328:12;;22128:218;-1:-1;;22128:218;22355:364;;22515:67;22579:2;22574:3;22515:67;;;22615:66;22595:87;;22710:2;22701:12;;22501:218;-1:-1;;22501:218;22728:364;;22888:67;22952:2;22947:3;22888:67;;;22988:66;22968:87;;23083:2;23074:12;;22874:218;-1:-1;;22874:218;23101:364;;23261:67;23325:2;23320:3;23261:67;;;-1:-1;;;23341:87;;23456:2;23447:12;;23247:218;-1:-1;;23247:218;23474:465;;23634:67;23698:2;23693:3;23634:67;;;23734:66;23714:87;;-1:-1;;;23830:2;23821:12;;23814:88;23930:2;23921:12;;23620:319;-1:-1;;23620:319;24321:465;;24481:67;24545:2;24540:3;24481:67;;;24581:66;24561:87;;-1:-1;;;24677:2;24668:12;;24661:88;24777:2;24768:12;;24467:319;-1:-1;;24467:319;24795:465;;24955:67;25019:2;25014:3;24955:67;;;25055:66;25035:87;;-1:-1;;;25151:2;25142:12;;25135:88;25251:2;25242:12;;24941:319;-1:-1;;24941:319;25642:364;;25802:67;25866:2;25861:3;25802:67;;;25902:66;25882:87;;25997:2;25988:12;;25788:218;-1:-1;;25788:218;26388:465;;26548:67;26612:2;26607:3;26548:67;;;26648:66;26628:87;;-1:-1;;;26744:2;26735:12;;26728:88;26844:2;26835:12;;26534:319;-1:-1;;26534:319;27319:1309;27547:22;;27480:4;27471:14;;;27575:62;27475:3;27547:22;27575:62;;;27500:143;27719:4;27712:5;27708:16;27702:23;27731:63;27788:4;27783:3;27779:14;27765:12;27731:63;;;27653:147;27878:4;27871:5;27867:16;27861:23;27890:63;27947:4;27942:3;27938:14;27924:12;27890:63;;;27810:149;28033:4;28026:5;28022:16;28016:23;28045:63;28102:4;28097:3;28093:14;28079:12;28045:63;;;27969:145;28198:4;28191:5;28187:16;28181:23;28210:63;28267:4;28262:3;28258:14;28244:12;28210:63;;;28124:155;28364:4;28357:5;28353:16;28347:23;28376:63;28433:4;28428:3;28424:14;28410:12;28376:63;;;28289:156;28532:4;28525:5;28521:16;28515:23;28544:63;28601:4;28596:3;28592:14;28578:12;28544:63;;28710:503;28934:22;;28861:4;28852:14;;;28962:62;28856:3;28934:22;28962:62;;;28881:149;29117:4;29110:5;29106:16;29100:23;29129:63;29186:4;29181:3;29177:14;29163:12;29129:63;;29297:656;29520:22;;29450:4;29441:14;;;29548:62;29445:3;29520:22;29548:62;;;29470:146;29695:4;29688:5;29684:16;29678:23;29707:63;29764:4;29759:3;29755:14;29741:12;29707:63;;;29626:150;29857:4;29850:5;29846:16;29840:23;29869:63;29926:4;29921:3;29917:14;29903:12;29869:63;;30190:100;30261:23;30278:5;30261:23;;30414:213;30532:2;30517:18;;30546:71;30521:9;30590:6;30546:71;;30634:340;30788:2;30773:18;;30802:79;30777:9;30854:6;30802:79;;;30892:72;30960:2;30949:9;30945:18;30936:6;30892:72;;30981:451;31163:2;31148:18;;31177:79;31152:9;31229:6;31177:79;;;31267:72;31335:2;31324:9;31320:18;31311:6;31267:72;;;31350;31418:2;31407:9;31403:18;31394:6;31350:72;;31439:324;31585:2;31570:18;;31599:71;31574:9;31643:6;31599:71;;;31681:72;31749:2;31738:9;31734:18;31725:6;31681:72;;31770:616;32014:2;32028:47;;;31999:18;;32089:108;31999:18;32183:6;32089:108;;;32081:116;;32245:9;32239:4;32235:20;32230:2;32219:9;32215:18;32208:48;32270:106;32371:4;32362:6;32270:106;;32393:201;32505:2;32490:18;;32519:65;32494:9;32557:6;32519:65;;32601:423;32769:2;32754:18;;32783:65;32758:9;32821:6;32783:65;;;32859:72;32927:2;32916:9;32912:18;32903:6;32859:72;;33031:213;33149:2;33134:18;;33163:71;33138:9;33207:6;33163:71;;33251:269;33397:2;33382:18;;33411:99;33386:9;33483:6;33411:99;;33779:293;33913:2;33927:47;;;33898:18;;33988:74;33898:18;34048:6;33988:74;;34387:407;34578:2;34592:47;;;34563:18;;34653:131;34563:18;34653:131;;35215:407;35406:2;35420:47;;;35391:18;;35481:131;35391:18;35481:131;;35629:407;35820:2;35834:47;;;35805:18;;35895:131;35805:18;35895:131;;36457:407;36648:2;36662:47;;;36633:18;;36723:131;36633:18;36723:131;;36871:407;37062:2;37076:47;;;37047:18;;37137:131;37047:18;37137:131;;37285:407;37476:2;37490:47;;;37461:18;;37551:131;37461:18;37551:131;;37699:407;37890:2;37904:47;;;37875:18;;37965:131;37875:18;37965:131;;38527:407;38718:2;38732:47;;;38703:18;;38793:131;38703:18;38793:131;;38941:407;39132:2;39146:47;;;39117:18;;39207:131;39117:18;39207:131;;39355:407;39546:2;39560:47;;;39531:18;;39621:131;39531:18;39621:131;;39769:407;39960:2;39974:47;;;39945:18;;40035:131;39945:18;40035:131;;41425:407;41616:2;41630:47;;;41601:18;;41691:131;41601:18;41691:131;;41839:407;42030:2;42044:47;;;42015:18;;42105:131;42015:18;42105:131;;42253:407;42444:2;42458:47;;;42429:18;;42519:131;42429:18;42519:131;;42667:407;42858:2;42872:47;;;42843:18;;42933:131;42843:18;42933:131;;44737:407;44928:2;44942:47;;;44913:18;;45003:131;44913:18;45003:131;;45151:407;45342:2;45356:47;;;45327:18;;45417:131;45327:18;45417:131;;45565:407;45756:2;45770:47;;;45741:18;;45831:131;45741:18;45831:131;;45979:407;46170:2;46184:47;;;46155:18;;46245:131;46155:18;46245:131;;46393:407;46584:2;46598:47;;;46569:18;;46659:131;46569:18;46659:131;;46807:407;46998:2;47012:47;;;46983:18;;47073:131;46983:18;47073:131;;47635:407;47826:2;47840:47;;;47811:18;;47901:131;47811:18;47901:131;;48049:407;48240:2;48254:47;;;48225:18;;48315:131;48225:18;48315:131;;48877:407;49068:2;49082:47;;;49053:18;;49143:131;49053:18;49143:131;;49705:407;49896:2;49910:47;;;49881:18;;49971:131;49881:18;49971:131;;50533:350;50719:3;50704:19;;50734:139;50708:9;50846:6;50734:139;;50890:329;51066:2;51051:18;;51080:129;51055:9;51182:6;51080:129;;51226:333;51404:2;51389:18;;51418:131;51393:9;51522:6;51418:131;;51786:727;52058:2;52043:18;;52072:71;52047:9;52116:6;52072:71;;;52191:9;52185:4;52181:20;52176:2;52165:9;52161:18;52154:48;52216:108;52319:4;52310:6;52216:108;;;52208:116;;52372:9;52366:4;52362:20;52357:2;52346:9;52342:18;52335:48;52397:106;52498:4;52489:6;52397:106;;;52389:114;52029:484;-1:-1;;;;;52029:484;52520:324;52666:2;52651:18;;52680:71;52655:9;52724:6;52680:71;;52851:435;53025:2;53010:18;;53039:71;53014:9;53083:6;53039:71;;53293:659;53523:3;53508:19;;53538:71;53512:9;53582:6;53538:71;;;53620:72;53688:2;53677:9;53673:18;53664:6;53620:72;;;53703;53771:2;53760:9;53756:18;53747:6;53703:72;;;53786;53854:2;53843:9;53839:18;53830:6;53786:72;;;53869:73;53937:3;53926:9;53922:19;53913:6;53869:73;;;53494:458;;;;;;;;;53959:209;54075:2;54060:18;;54089:69;54064:9;54131:6;54089:69;;54175:151;54299:4;54290:14;;54247:79;54490:137;54593:12;;54564:63;55261:178;55379:19;;;55428:4;55419:14;;55372:67;55805:91;;55867:24;55885:5;55867:24;;55903:85;55969:13;55962:21;;55945:43;56074:119;;56164:24;56182:5;56164:24;;56200:121;-1:-1;;;;;56262:54;;56245:76;56407:88;56479:10;56468:22;;56451:44;56502:129;;56589:37;56620:5;56589:37;;57500:268;57565:1;57572:101;57586:6;57583:1;57580:13;57572:101;;;57653:11;;;57647:18;57634:11;;;57627:39;57608:2;57601:10;57572:101;;;57688:6;57685:1;57682:13;57679:2;;;-1:-1;;57753:1;57735:16;;57728:27;57549:219;57776:97;57864:2;57844:14;-1:-1;;57840:28;;57824:49;57881:117;57950:24;57968:5;57950:24;;;57943:5;57940:35;57930:2;;57989:1;57986;57979:12;58005:111;58071:21;58086:5;58071:21;;58123:117;58192:24;58210:5;58192:24;;58247:173;58344:52;58390:5;58344:52;",
  "source": "pragma solidity >=0.5.10 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport {RToken} from '../RToken.sol';\n\n/**\n * @dev Test RTokenStorage Layout\n */\ncontract RTokenStorageLayoutTester is RToken {\n    function validate() public pure {\n        uint256 slot;\n        uint256 offset;\n\n        // address public _owner;\n        assembly { slot:= _owner_slot offset := _owner_offset }\n        require (slot == 0 && offset == 0, \"_owner changed location\");\n\n        // bool public initialized;\n        assembly { slot:= initialized_slot offset := initialized_offset }\n        require (slot == 0 && offset == 20, \"initialized changed location\");\n\n        // uint256 public _guardCounter;\n        assembly { slot:= _guardCounter_slot offset := _guardCounter_offset }\n        require (slot == 1 && offset == 0, \"_guardCounter changed location\");\n\n        // string public name;\n        assembly { slot:= name_slot offset := name_offset }\n        require (slot == 2 && offset == 0, \"name changed location\");\n\n        // string public symbol;\n        assembly { slot:= symbol_slot offset := symbol_offset }\n        require (slot == 3 && offset == 0, \"symbol changed location\");\n\n        // string public decimals;\n        assembly { slot:= decimals_slot offset := decimals_offset }\n        require (slot == 4 && offset == 0, \"decimals changed location\");\n\n        // string public totalSupply;\n        assembly { slot:= totalSupply_slot offset := totalSupply_offset }\n        require (slot == 5 && offset == 0, \"totalSupply changed location\");\n\n        // string public ias;\n        assembly { slot:= ias_slot offset := ias_offset }\n        require (slot == 6 && offset == 0, \"ias changed location\");\n\n        // string public token;\n        assembly { slot:= token_slot offset := token_offset }\n        require (slot == 7 && offset == 0, \"token changed location\");\n\n        // string public savingAssetOrignalAmount;\n        assembly { slot:= savingAssetOrignalAmount_slot offset := savingAssetOrignalAmount_offset }\n        require (slot == 8 && offset == 0, \"savingAssetOrignalAmount changed location\");\n\n        // string public savingAssetConversionRate;\n        assembly { slot:= savingAssetConversionRate_slot offset := savingAssetConversionRate_offset }\n        require (slot == 9 && offset == 0, \"savingAssetOrignalAmount changed location\");\n\n        // string public transferAllowances;\n        assembly { slot:= transferAllowances_slot offset := transferAllowances_offset }\n        require (slot == 10 && offset == 0, \"savingAssetOrignalAmount changed location\");\n\n        // string public hats;\n        assembly { slot:= hats_slot offset := hats_offset }\n        require (slot == 11 && offset == 0, \"hats changed location\");\n\n        // string public accounts;\n        assembly { slot:= accounts_slot offset := accounts_offset }\n        require (slot == 12 && offset == 0, \"accounts changed location\");\n\n        /* Account storage account = accounts[address(0)];\n        assembly { slot:= account.hatID_slot offset := account.hatID_offset }\n        require (slot == 12 && offset == 0, \"accounts changed location\"); */\n\n        // string public accountStats;\n        assembly { slot:= accountStats_slot offset := accountStats_offset }\n        require (slot == 13 && offset == 0, \"accountStats changed location\");\n\n        // string public hatStats;\n        assembly { slot:= hatStats_slot offset := hatStats_offset }\n        require (slot == 14 && offset == 0, \"hatStats changed location\");\n    }\n}\n",
  "sourcePath": "/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/test/StorageLayout.sol",
  "ast": {
    "absolutePath": "/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/test/StorageLayout.sol",
    "exportedSymbols": {
      "RTokenStorageLayoutTester": [
        10246
      ]
    },
    "id": 10247,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10038,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".10",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:26"
      },
      {
        "id": 10039,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:26"
      },
      {
        "absolutePath": "/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/RToken.sol",
        "file": "../RToken.sol",
        "id": 10041,
        "nodeType": "ImportDirective",
        "scope": 10247,
        "sourceUnit": 9136,
        "src": "68:37:26",
        "symbolAliases": [
          {
            "foreign": 10040,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10042,
              "name": "RToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9135,
              "src": "187:6:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RToken_$9135",
                "typeString": "contract RToken"
              }
            },
            "id": 10043,
            "nodeType": "InheritanceSpecifier",
            "src": "187:6:26"
          }
        ],
        "contractDependencies": [
          6305,
          6350,
          6376,
          6489,
          6520,
          9135,
          9192,
          9254,
          9280,
          11270
        ],
        "contractKind": "contract",
        "documentation": "@dev Test RTokenStorage Layout",
        "fullyImplemented": true,
        "id": 10246,
        "linearizedBaseContracts": [
          10246,
          9135,
          9280,
          6376,
          6520,
          6489,
          6350,
          6305,
          9192,
          11270,
          9254
        ],
        "name": "RTokenStorageLayoutTester",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10244,
              "nodeType": "Block",
              "src": "232:3263:26",
              "statements": [
                {
                  "assignments": [
                    10047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10047,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 10244,
                      "src": "242:12:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10046,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "242:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10048,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "242:12:26"
                },
                {
                  "assignments": [
                    10050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10050,
                      "name": "offset",
                      "nodeType": "VariableDeclaration",
                      "scope": 10244,
                      "src": "264:14:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10049,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "264:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10051,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "264:14:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "334:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "_owner_slot": {
                        "declaration": 9150,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "341:11:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "353:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "_owner_offset": {
                        "declaration": 9150,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "363:13:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10052,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := _owner_slot\n    offset := _owner_offset\n}",
                  "src": "323:55:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10054,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "396:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "404:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "396:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10057,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "409:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "419:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "409:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "396:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f6f776e6572206368616e676564206c6f636174696f6e",
                        "id": 10061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "422:25:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_533d2301823d580cb546c9d1ac477da7778d7dd5191701878f391e5354c5456f",
                          "typeString": "literal_string \"_owner changed location\""
                        },
                        "value": "_owner changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_533d2301823d580cb546c9d1ac477da7778d7dd5191701878f391e5354c5456f",
                          "typeString": "literal_string \"_owner changed location\""
                        }
                      ],
                      "id": 10053,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "387:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "387:61:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10063,
                  "nodeType": "ExpressionStatement",
                  "src": "387:61:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "506:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "initialized_slot": {
                        "declaration": 9152,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "513:16:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "530:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "initialized_offset": {
                        "declaration": 9152,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "540:18:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10064,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := initialized_slot\n    offset := initialized_offset\n}",
                  "src": "495:65:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10066,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "578:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "586:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "578:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10069,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "591:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3230",
                            "id": 10070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "601:2:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "src": "591:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "578:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e697469616c697a6564206368616e676564206c6f636174696f6e",
                        "id": 10073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "605:30:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ececdac160e46e5a724c4cfe05e5fac7782a85f83712166f87df5dd59d455b4",
                          "typeString": "literal_string \"initialized changed location\""
                        },
                        "value": "initialized changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ececdac160e46e5a724c4cfe05e5fac7782a85f83712166f87df5dd59d455b4",
                          "typeString": "literal_string \"initialized changed location\""
                        }
                      ],
                      "id": 10065,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "569:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:67:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10075,
                  "nodeType": "ExpressionStatement",
                  "src": "569:67:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "699:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "_guardCounter_slot": {
                        "declaration": 9154,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "706:18:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "725:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "_guardCounter_offset": {
                        "declaration": 9154,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "735:20:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10076,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := _guardCounter_slot\n    offset := _guardCounter_offset\n}",
                  "src": "688:69:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10078,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "775:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 10079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "783:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "775:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10081,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "788:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "798:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "788:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "775:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f6775617264436f756e746572206368616e676564206c6f636174696f6e",
                        "id": 10085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "801:32:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589ae6b5e848f47c37be2f22d190fcde15f09d2d7c7ce8669807eb4378068f7a",
                          "typeString": "literal_string \"_guardCounter changed location\""
                        },
                        "value": "_guardCounter changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589ae6b5e848f47c37be2f22d190fcde15f09d2d7c7ce8669807eb4378068f7a",
                          "typeString": "literal_string \"_guardCounter changed location\""
                        }
                      ],
                      "id": 10077,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "766:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:68:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10087,
                  "nodeType": "ExpressionStatement",
                  "src": "766:68:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "887:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "name_slot": {
                        "declaration": 9156,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "894:9:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "904:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "name_offset": {
                        "declaration": 9156,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "914:11:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10088,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := name_slot\n    offset := name_offset\n}",
                  "src": "876:51:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10090,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "945:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 10091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "953:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "945:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10093,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "958:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "968:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "958:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "945:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e616d65206368616e676564206c6f636174696f6e",
                        "id": 10097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "971:23:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e104883c4694d261f165668e614beff89bcef4cc639b824e1917cced2a161415",
                          "typeString": "literal_string \"name changed location\""
                        },
                        "value": "name changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e104883c4694d261f165668e614beff89bcef4cc639b824e1917cced2a161415",
                          "typeString": "literal_string \"name changed location\""
                        }
                      ],
                      "id": 10089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "936:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:59:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10099,
                  "nodeType": "ExpressionStatement",
                  "src": "936:59:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1050:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "symbol_slot": {
                        "declaration": 9158,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "1057:11:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1069:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "symbol_offset": {
                        "declaration": 9158,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "1079:13:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10100,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := symbol_slot\n    offset := symbol_offset\n}",
                  "src": "1039:55:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10102,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "1112:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 10103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1120:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "1112:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10105,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "1125:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1135:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1125:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1112:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73796d626f6c206368616e676564206c6f636174696f6e",
                        "id": 10109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1138:25:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffd76ba95a15e6c36fc4b14f875304f2e6e60a656ec821b1d264f46e6880b51e",
                          "typeString": "literal_string \"symbol changed location\""
                        },
                        "value": "symbol changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffd76ba95a15e6c36fc4b14f875304f2e6e60a656ec821b1d264f46e6880b51e",
                          "typeString": "literal_string \"symbol changed location\""
                        }
                      ],
                      "id": 10101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "1103:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1103:61:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10111,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:61:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1221:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "decimals_slot": {
                        "declaration": 9160,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "1228:13:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1242:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "decimals_offset": {
                        "declaration": 9160,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "1252:15:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10112,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := decimals_slot\n    offset := decimals_offset\n}",
                  "src": "1210:59:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10114,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "1287:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "34",
                            "id": 10115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1295:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "1287:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10117,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "1300:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1310:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1300:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1287:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "646563696d616c73206368616e676564206c6f636174696f6e",
                        "id": 10121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1313:27:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7d1e6be60ed6804ef19398fcf457a8e73e58c5bffbff497fa8efd8816eeb868e",
                          "typeString": "literal_string \"decimals changed location\""
                        },
                        "value": "decimals changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7d1e6be60ed6804ef19398fcf457a8e73e58c5bffbff497fa8efd8816eeb868e",
                          "typeString": "literal_string \"decimals changed location\""
                        }
                      ],
                      "id": 10113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "1278:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:63:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10123,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:63:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1401:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "totalSupply_slot": {
                        "declaration": 9162,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "1408:16:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1425:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "totalSupply_offset": {
                        "declaration": 9162,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "1435:18:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10124,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := totalSupply_slot\n    offset := totalSupply_offset\n}",
                  "src": "1390:65:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10126,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "1473:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "35",
                            "id": 10127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1481:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "1473:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10129,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "1486:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1496:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1486:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1473:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f74616c537570706c79206368616e676564206c6f636174696f6e",
                        "id": 10133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1499:30:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1d9cc6853c16703260d531bfc44686ec1f14054d7ccfbeab428d5657f683137",
                          "typeString": "literal_string \"totalSupply changed location\""
                        },
                        "value": "totalSupply changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1d9cc6853c16703260d531bfc44686ec1f14054d7ccfbeab428d5657f683137",
                          "typeString": "literal_string \"totalSupply changed location\""
                        }
                      ],
                      "id": 10125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "1464:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:66:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10135,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:66:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1582:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "ias_slot": {
                        "declaration": 9164,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "1589:8:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1598:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "ias_offset": {
                        "declaration": 9164,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "1608:10:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10136,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := ias_slot\n    offset := ias_offset\n}",
                  "src": "1571:49:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10138,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "1638:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "36",
                            "id": 10139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1646:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "1638:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10141,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "1651:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1661:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1651:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1638:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696173206368616e676564206c6f636174696f6e",
                        "id": 10145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1664:22:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_215de22b4d0ebfe232dbce3efb34cb6dd6c2b14a49a12c67f89bd565fd1e6d1b",
                          "typeString": "literal_string \"ias changed location\""
                        },
                        "value": "ias changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_215de22b4d0ebfe232dbce3efb34cb6dd6c2b14a49a12c67f89bd565fd1e6d1b",
                          "typeString": "literal_string \"ias changed location\""
                        }
                      ],
                      "id": 10137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "1629:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1629:58:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10147,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:58:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1741:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "token_slot": {
                        "declaration": 9166,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "1748:10:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1759:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "token_offset": {
                        "declaration": 9166,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "1769:12:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10148,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := token_slot\n    offset := token_offset\n}",
                  "src": "1730:53:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10150,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "1801:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "37",
                            "id": 10151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1809:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_7_by_1",
                              "typeString": "int_const 7"
                            },
                            "value": "7"
                          },
                          "src": "1801:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10153,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "1814:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1824:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1814:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1801:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6b656e206368616e676564206c6f636174696f6e",
                        "id": 10157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1827:24:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_053752854c7417908c67de2280681cf41e2885c3ad16fec19b9eb5e288e86de9",
                          "typeString": "literal_string \"token changed location\""
                        },
                        "value": "token changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_053752854c7417908c67de2280681cf41e2885c3ad16fec19b9eb5e288e86de9",
                          "typeString": "literal_string \"token changed location\""
                        }
                      ],
                      "id": 10149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "1792:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:60:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10159,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:60:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1925:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "savingAssetOrignalAmount_slot": {
                        "declaration": 9168,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "1932:29:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1962:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "savingAssetOrignalAmount_offset": {
                        "declaration": 9168,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "1972:31:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10160,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := savingAssetOrignalAmount_slot\n    offset := savingAssetOrignalAmount_offset\n}",
                  "src": "1914:91:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10162,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "2023:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "38",
                            "id": 10163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2031:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "2023:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10165,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "2036:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2046:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2036:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2023:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736176696e6741737365744f7269676e616c416d6f756e74206368616e676564206c6f636174696f6e",
                        "id": 10169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2049:43:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ffb3c2dd41820d50ff8bc9a230304ab322d01cde02bf927b210d84b6f801863",
                          "typeString": "literal_string \"savingAssetOrignalAmount changed location\""
                        },
                        "value": "savingAssetOrignalAmount changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ffb3c2dd41820d50ff8bc9a230304ab322d01cde02bf927b210d84b6f801863",
                          "typeString": "literal_string \"savingAssetOrignalAmount changed location\""
                        }
                      ],
                      "id": 10161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "2014:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2014:79:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10171,
                  "nodeType": "ExpressionStatement",
                  "src": "2014:79:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2167:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "savingAssetConversionRate_slot": {
                        "declaration": 9170,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "2174:30:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2205:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "savingAssetConversionRate_offset": {
                        "declaration": 9170,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "2215:32:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10172,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := savingAssetConversionRate_slot\n    offset := savingAssetConversionRate_offset\n}",
                  "src": "2156:93:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10174,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "2267:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "39",
                            "id": 10175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2275:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            },
                            "value": "9"
                          },
                          "src": "2267:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10177,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "2280:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2290:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2280:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2267:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736176696e6741737365744f7269676e616c416d6f756e74206368616e676564206c6f636174696f6e",
                        "id": 10181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2293:43:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ffb3c2dd41820d50ff8bc9a230304ab322d01cde02bf927b210d84b6f801863",
                          "typeString": "literal_string \"savingAssetOrignalAmount changed location\""
                        },
                        "value": "savingAssetOrignalAmount changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ffb3c2dd41820d50ff8bc9a230304ab322d01cde02bf927b210d84b6f801863",
                          "typeString": "literal_string \"savingAssetOrignalAmount changed location\""
                        }
                      ],
                      "id": 10173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "2258:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2258:79:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10183,
                  "nodeType": "ExpressionStatement",
                  "src": "2258:79:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2404:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "transferAllowances_slot": {
                        "declaration": 9176,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "2411:23:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2435:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "transferAllowances_offset": {
                        "declaration": 9176,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "2445:25:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10184,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := transferAllowances_slot\n    offset := transferAllowances_offset\n}",
                  "src": "2393:79:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10186,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "2490:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 10187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2498:2:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "2490:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10189,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "2504:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2514:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2504:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2490:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736176696e6741737365744f7269676e616c416d6f756e74206368616e676564206c6f636174696f6e",
                        "id": 10193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2517:43:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ffb3c2dd41820d50ff8bc9a230304ab322d01cde02bf927b210d84b6f801863",
                          "typeString": "literal_string \"savingAssetOrignalAmount changed location\""
                        },
                        "value": "savingAssetOrignalAmount changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ffb3c2dd41820d50ff8bc9a230304ab322d01cde02bf927b210d84b6f801863",
                          "typeString": "literal_string \"savingAssetOrignalAmount changed location\""
                        }
                      ],
                      "id": 10185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "2481:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2481:80:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10195,
                  "nodeType": "ExpressionStatement",
                  "src": "2481:80:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2614:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "hats_slot": {
                        "declaration": 9179,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "2621:9:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2631:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "hats_offset": {
                        "declaration": 9179,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "2641:11:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10196,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := hats_slot\n    offset := hats_offset\n}",
                  "src": "2603:51:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10198,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "2672:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3131",
                            "id": 10199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2680:2:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_11_by_1",
                              "typeString": "int_const 11"
                            },
                            "value": "11"
                          },
                          "src": "2672:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10201,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "2686:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2696:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2686:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2672:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "68617473206368616e676564206c6f636174696f6e",
                        "id": 10205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2699:23:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8be37b68f7e893f838f6cb121e669c0d2d80ef602a954743c51061143cb586fe",
                          "typeString": "literal_string \"hats changed location\""
                        },
                        "value": "hats changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8be37b68f7e893f838f6cb121e669c0d2d80ef602a954743c51061143cb586fe",
                          "typeString": "literal_string \"hats changed location\""
                        }
                      ],
                      "id": 10197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "2663:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2663:60:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10207,
                  "nodeType": "ExpressionStatement",
                  "src": "2663:60:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2780:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "accounts_slot": {
                        "declaration": 9183,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "2787:13:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2801:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "accounts_offset": {
                        "declaration": 9183,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "2811:15:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10208,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := accounts_slot\n    offset := accounts_offset\n}",
                  "src": "2769:59:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10210,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "2846:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3132",
                            "id": 10211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2854:2:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_12_by_1",
                              "typeString": "int_const 12"
                            },
                            "value": "12"
                          },
                          "src": "2846:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10213,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "2860:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2870:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2860:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2846:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6163636f756e7473206368616e676564206c6f636174696f6e",
                        "id": 10217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2873:27:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f4cc672cb4d99cf4ce280bfa330dab0a36218bcb4ae8da6290167c677778cbb",
                          "typeString": "literal_string \"accounts changed location\""
                        },
                        "value": "accounts changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f4cc672cb4d99cf4ce280bfa330dab0a36218bcb4ae8da6290167c677778cbb",
                          "typeString": "literal_string \"accounts changed location\""
                        }
                      ],
                      "id": 10209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "2837:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2837:64:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10219,
                  "nodeType": "ExpressionStatement",
                  "src": "2837:64:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3177:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "accountStats_slot": {
                        "declaration": 9187,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "3184:17:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3202:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "accountStats_offset": {
                        "declaration": 9187,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "3212:19:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10220,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := accountStats_slot\n    offset := accountStats_offset\n}",
                  "src": "3166:67:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10222,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "3251:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3133",
                            "id": 10223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3259:2:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_13_by_1",
                              "typeString": "int_const 13"
                            },
                            "value": "13"
                          },
                          "src": "3251:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10225,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "3265:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3275:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3265:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3251:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6163636f756e745374617473206368616e676564206c6f636174696f6e",
                        "id": 10229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3278:31:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c22497b8453de0267775bf013fe1925446d2251fdca2395bd58188b7a284896b",
                          "typeString": "literal_string \"accountStats changed location\""
                        },
                        "value": "accountStats changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c22497b8453de0267775bf013fe1925446d2251fdca2395bd58188b7a284896b",
                          "typeString": "literal_string \"accountStats changed location\""
                        }
                      ],
                      "id": 10221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "3242:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:68:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10231,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:68:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3367:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "hatStats_slot": {
                        "declaration": 9191,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "3374:13:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3388:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "hatStats_offset": {
                        "declaration": 9191,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "3398:15:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10232,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := hatStats_slot\n    offset := hatStats_offset\n}",
                  "src": "3356:59:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10234,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "3433:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3134",
                            "id": 10235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3441:2:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_14_by_1",
                              "typeString": "int_const 14"
                            },
                            "value": "14"
                          },
                          "src": "3433:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10237,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "3447:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3457:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3447:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3433:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6861745374617473206368616e676564206c6f636174696f6e",
                        "id": 10241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3460:27:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36a703975ec46644537900aea28046c436d5c904dac68a108b1f2f9406414b37",
                          "typeString": "literal_string \"hatStats changed location\""
                        },
                        "value": "hatStats changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36a703975ec46644537900aea28046c436d5c904dac68a108b1f2f9406414b37",
                          "typeString": "literal_string \"hatStats changed location\""
                        }
                      ],
                      "id": 10233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "3424:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3424:64:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10243,
                  "nodeType": "ExpressionStatement",
                  "src": "3424:64:26"
                }
              ]
            },
            "documentation": null,
            "id": 10245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "217:2:26"
            },
            "returnParameters": {
              "id": 10045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "232:0:26"
            },
            "scope": 10246,
            "src": "200:3295:26",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10247,
        "src": "149:3348:26"
      }
    ],
    "src": "0:3498:26"
  },
  "legacyAST": {
    "absolutePath": "/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/test/StorageLayout.sol",
    "exportedSymbols": {
      "RTokenStorageLayoutTester": [
        10246
      ]
    },
    "id": 10247,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10038,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".10",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:26"
      },
      {
        "id": 10039,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:26"
      },
      {
        "absolutePath": "/Users/william/Development/Ethereum/StakeCapitalRepos/rtoken-contracts/contracts/RToken.sol",
        "file": "../RToken.sol",
        "id": 10041,
        "nodeType": "ImportDirective",
        "scope": 10247,
        "sourceUnit": 9136,
        "src": "68:37:26",
        "symbolAliases": [
          {
            "foreign": 10040,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10042,
              "name": "RToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9135,
              "src": "187:6:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RToken_$9135",
                "typeString": "contract RToken"
              }
            },
            "id": 10043,
            "nodeType": "InheritanceSpecifier",
            "src": "187:6:26"
          }
        ],
        "contractDependencies": [
          6305,
          6350,
          6376,
          6489,
          6520,
          9135,
          9192,
          9254,
          9280,
          11270
        ],
        "contractKind": "contract",
        "documentation": "@dev Test RTokenStorage Layout",
        "fullyImplemented": true,
        "id": 10246,
        "linearizedBaseContracts": [
          10246,
          9135,
          9280,
          6376,
          6520,
          6489,
          6350,
          6305,
          9192,
          11270,
          9254
        ],
        "name": "RTokenStorageLayoutTester",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10244,
              "nodeType": "Block",
              "src": "232:3263:26",
              "statements": [
                {
                  "assignments": [
                    10047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10047,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 10244,
                      "src": "242:12:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10046,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "242:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10048,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "242:12:26"
                },
                {
                  "assignments": [
                    10050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10050,
                      "name": "offset",
                      "nodeType": "VariableDeclaration",
                      "scope": 10244,
                      "src": "264:14:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10049,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "264:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10051,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "264:14:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "334:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "_owner_slot": {
                        "declaration": 9150,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "341:11:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "353:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "_owner_offset": {
                        "declaration": 9150,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "363:13:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10052,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := _owner_slot\n    offset := _owner_offset\n}",
                  "src": "323:55:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10054,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "396:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "404:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "396:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10057,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "409:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "419:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "409:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "396:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f6f776e6572206368616e676564206c6f636174696f6e",
                        "id": 10061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "422:25:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_533d2301823d580cb546c9d1ac477da7778d7dd5191701878f391e5354c5456f",
                          "typeString": "literal_string \"_owner changed location\""
                        },
                        "value": "_owner changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_533d2301823d580cb546c9d1ac477da7778d7dd5191701878f391e5354c5456f",
                          "typeString": "literal_string \"_owner changed location\""
                        }
                      ],
                      "id": 10053,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "387:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "387:61:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10063,
                  "nodeType": "ExpressionStatement",
                  "src": "387:61:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "506:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "initialized_slot": {
                        "declaration": 9152,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "513:16:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "530:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "initialized_offset": {
                        "declaration": 9152,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "540:18:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10064,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := initialized_slot\n    offset := initialized_offset\n}",
                  "src": "495:65:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10066,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "578:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "586:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "578:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10069,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "591:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3230",
                            "id": 10070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "601:2:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "src": "591:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "578:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e697469616c697a6564206368616e676564206c6f636174696f6e",
                        "id": 10073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "605:30:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ececdac160e46e5a724c4cfe05e5fac7782a85f83712166f87df5dd59d455b4",
                          "typeString": "literal_string \"initialized changed location\""
                        },
                        "value": "initialized changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ececdac160e46e5a724c4cfe05e5fac7782a85f83712166f87df5dd59d455b4",
                          "typeString": "literal_string \"initialized changed location\""
                        }
                      ],
                      "id": 10065,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "569:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:67:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10075,
                  "nodeType": "ExpressionStatement",
                  "src": "569:67:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "699:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "_guardCounter_slot": {
                        "declaration": 9154,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "706:18:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "725:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "_guardCounter_offset": {
                        "declaration": 9154,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "735:20:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10076,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := _guardCounter_slot\n    offset := _guardCounter_offset\n}",
                  "src": "688:69:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10078,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "775:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 10079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "783:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "775:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10081,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "788:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "798:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "788:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "775:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f6775617264436f756e746572206368616e676564206c6f636174696f6e",
                        "id": 10085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "801:32:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_589ae6b5e848f47c37be2f22d190fcde15f09d2d7c7ce8669807eb4378068f7a",
                          "typeString": "literal_string \"_guardCounter changed location\""
                        },
                        "value": "_guardCounter changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_589ae6b5e848f47c37be2f22d190fcde15f09d2d7c7ce8669807eb4378068f7a",
                          "typeString": "literal_string \"_guardCounter changed location\""
                        }
                      ],
                      "id": 10077,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "766:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:68:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10087,
                  "nodeType": "ExpressionStatement",
                  "src": "766:68:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "887:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "name_slot": {
                        "declaration": 9156,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "894:9:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "904:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "name_offset": {
                        "declaration": 9156,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "914:11:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10088,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := name_slot\n    offset := name_offset\n}",
                  "src": "876:51:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10090,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "945:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 10091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "953:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "945:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10093,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "958:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "968:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "958:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "945:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e616d65206368616e676564206c6f636174696f6e",
                        "id": 10097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "971:23:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e104883c4694d261f165668e614beff89bcef4cc639b824e1917cced2a161415",
                          "typeString": "literal_string \"name changed location\""
                        },
                        "value": "name changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e104883c4694d261f165668e614beff89bcef4cc639b824e1917cced2a161415",
                          "typeString": "literal_string \"name changed location\""
                        }
                      ],
                      "id": 10089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "936:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:59:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10099,
                  "nodeType": "ExpressionStatement",
                  "src": "936:59:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1050:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "symbol_slot": {
                        "declaration": 9158,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "1057:11:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1069:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "symbol_offset": {
                        "declaration": 9158,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "1079:13:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10100,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := symbol_slot\n    offset := symbol_offset\n}",
                  "src": "1039:55:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10102,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "1112:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 10103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1120:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "1112:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10105,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "1125:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1135:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1125:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1112:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73796d626f6c206368616e676564206c6f636174696f6e",
                        "id": 10109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1138:25:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffd76ba95a15e6c36fc4b14f875304f2e6e60a656ec821b1d264f46e6880b51e",
                          "typeString": "literal_string \"symbol changed location\""
                        },
                        "value": "symbol changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffd76ba95a15e6c36fc4b14f875304f2e6e60a656ec821b1d264f46e6880b51e",
                          "typeString": "literal_string \"symbol changed location\""
                        }
                      ],
                      "id": 10101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "1103:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1103:61:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10111,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:61:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1221:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "decimals_slot": {
                        "declaration": 9160,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "1228:13:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1242:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "decimals_offset": {
                        "declaration": 9160,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "1252:15:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10112,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := decimals_slot\n    offset := decimals_offset\n}",
                  "src": "1210:59:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10114,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "1287:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "34",
                            "id": 10115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1295:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "1287:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10117,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "1300:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1310:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1300:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1287:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "646563696d616c73206368616e676564206c6f636174696f6e",
                        "id": 10121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1313:27:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7d1e6be60ed6804ef19398fcf457a8e73e58c5bffbff497fa8efd8816eeb868e",
                          "typeString": "literal_string \"decimals changed location\""
                        },
                        "value": "decimals changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7d1e6be60ed6804ef19398fcf457a8e73e58c5bffbff497fa8efd8816eeb868e",
                          "typeString": "literal_string \"decimals changed location\""
                        }
                      ],
                      "id": 10113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "1278:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:63:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10123,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:63:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1401:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "totalSupply_slot": {
                        "declaration": 9162,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "1408:16:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1425:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "totalSupply_offset": {
                        "declaration": 9162,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "1435:18:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10124,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := totalSupply_slot\n    offset := totalSupply_offset\n}",
                  "src": "1390:65:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10126,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "1473:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "35",
                            "id": 10127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1481:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "1473:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10129,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "1486:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1496:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1486:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1473:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f74616c537570706c79206368616e676564206c6f636174696f6e",
                        "id": 10133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1499:30:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1d9cc6853c16703260d531bfc44686ec1f14054d7ccfbeab428d5657f683137",
                          "typeString": "literal_string \"totalSupply changed location\""
                        },
                        "value": "totalSupply changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1d9cc6853c16703260d531bfc44686ec1f14054d7ccfbeab428d5657f683137",
                          "typeString": "literal_string \"totalSupply changed location\""
                        }
                      ],
                      "id": 10125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "1464:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:66:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10135,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:66:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1582:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "ias_slot": {
                        "declaration": 9164,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "1589:8:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1598:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "ias_offset": {
                        "declaration": 9164,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "1608:10:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10136,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := ias_slot\n    offset := ias_offset\n}",
                  "src": "1571:49:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10138,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "1638:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "36",
                            "id": 10139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1646:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "1638:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10141,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "1651:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1661:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1651:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1638:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696173206368616e676564206c6f636174696f6e",
                        "id": 10145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1664:22:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_215de22b4d0ebfe232dbce3efb34cb6dd6c2b14a49a12c67f89bd565fd1e6d1b",
                          "typeString": "literal_string \"ias changed location\""
                        },
                        "value": "ias changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_215de22b4d0ebfe232dbce3efb34cb6dd6c2b14a49a12c67f89bd565fd1e6d1b",
                          "typeString": "literal_string \"ias changed location\""
                        }
                      ],
                      "id": 10137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "1629:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1629:58:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10147,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:58:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1741:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "token_slot": {
                        "declaration": 9166,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "1748:10:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1759:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "token_offset": {
                        "declaration": 9166,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "1769:12:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10148,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := token_slot\n    offset := token_offset\n}",
                  "src": "1730:53:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10150,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "1801:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "37",
                            "id": 10151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1809:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_7_by_1",
                              "typeString": "int_const 7"
                            },
                            "value": "7"
                          },
                          "src": "1801:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10153,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "1814:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1824:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1814:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1801:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6b656e206368616e676564206c6f636174696f6e",
                        "id": 10157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1827:24:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_053752854c7417908c67de2280681cf41e2885c3ad16fec19b9eb5e288e86de9",
                          "typeString": "literal_string \"token changed location\""
                        },
                        "value": "token changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_053752854c7417908c67de2280681cf41e2885c3ad16fec19b9eb5e288e86de9",
                          "typeString": "literal_string \"token changed location\""
                        }
                      ],
                      "id": 10149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "1792:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:60:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10159,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:60:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1925:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "savingAssetOrignalAmount_slot": {
                        "declaration": 9168,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "1932:29:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1962:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "savingAssetOrignalAmount_offset": {
                        "declaration": 9168,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "1972:31:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10160,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := savingAssetOrignalAmount_slot\n    offset := savingAssetOrignalAmount_offset\n}",
                  "src": "1914:91:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10162,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "2023:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "38",
                            "id": 10163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2031:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "2023:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10165,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "2036:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2046:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2036:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2023:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736176696e6741737365744f7269676e616c416d6f756e74206368616e676564206c6f636174696f6e",
                        "id": 10169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2049:43:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ffb3c2dd41820d50ff8bc9a230304ab322d01cde02bf927b210d84b6f801863",
                          "typeString": "literal_string \"savingAssetOrignalAmount changed location\""
                        },
                        "value": "savingAssetOrignalAmount changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ffb3c2dd41820d50ff8bc9a230304ab322d01cde02bf927b210d84b6f801863",
                          "typeString": "literal_string \"savingAssetOrignalAmount changed location\""
                        }
                      ],
                      "id": 10161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "2014:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2014:79:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10171,
                  "nodeType": "ExpressionStatement",
                  "src": "2014:79:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2167:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "savingAssetConversionRate_slot": {
                        "declaration": 9170,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "2174:30:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2205:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "savingAssetConversionRate_offset": {
                        "declaration": 9170,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "2215:32:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10172,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := savingAssetConversionRate_slot\n    offset := savingAssetConversionRate_offset\n}",
                  "src": "2156:93:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10174,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "2267:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "39",
                            "id": 10175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2275:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            },
                            "value": "9"
                          },
                          "src": "2267:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10177,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "2280:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2290:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2280:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2267:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736176696e6741737365744f7269676e616c416d6f756e74206368616e676564206c6f636174696f6e",
                        "id": 10181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2293:43:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ffb3c2dd41820d50ff8bc9a230304ab322d01cde02bf927b210d84b6f801863",
                          "typeString": "literal_string \"savingAssetOrignalAmount changed location\""
                        },
                        "value": "savingAssetOrignalAmount changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ffb3c2dd41820d50ff8bc9a230304ab322d01cde02bf927b210d84b6f801863",
                          "typeString": "literal_string \"savingAssetOrignalAmount changed location\""
                        }
                      ],
                      "id": 10173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "2258:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2258:79:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10183,
                  "nodeType": "ExpressionStatement",
                  "src": "2258:79:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2404:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "transferAllowances_slot": {
                        "declaration": 9176,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "2411:23:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2435:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "transferAllowances_offset": {
                        "declaration": 9176,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "2445:25:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10184,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := transferAllowances_slot\n    offset := transferAllowances_offset\n}",
                  "src": "2393:79:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10186,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "2490:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 10187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2498:2:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "2490:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10189,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "2504:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2514:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2504:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2490:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736176696e6741737365744f7269676e616c416d6f756e74206368616e676564206c6f636174696f6e",
                        "id": 10193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2517:43:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ffb3c2dd41820d50ff8bc9a230304ab322d01cde02bf927b210d84b6f801863",
                          "typeString": "literal_string \"savingAssetOrignalAmount changed location\""
                        },
                        "value": "savingAssetOrignalAmount changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ffb3c2dd41820d50ff8bc9a230304ab322d01cde02bf927b210d84b6f801863",
                          "typeString": "literal_string \"savingAssetOrignalAmount changed location\""
                        }
                      ],
                      "id": 10185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "2481:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2481:80:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10195,
                  "nodeType": "ExpressionStatement",
                  "src": "2481:80:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2614:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "hats_slot": {
                        "declaration": 9179,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "2621:9:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2631:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "hats_offset": {
                        "declaration": 9179,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "2641:11:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10196,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := hats_slot\n    offset := hats_offset\n}",
                  "src": "2603:51:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10198,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "2672:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3131",
                            "id": 10199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2680:2:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_11_by_1",
                              "typeString": "int_const 11"
                            },
                            "value": "11"
                          },
                          "src": "2672:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10201,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "2686:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2696:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2686:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2672:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "68617473206368616e676564206c6f636174696f6e",
                        "id": 10205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2699:23:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8be37b68f7e893f838f6cb121e669c0d2d80ef602a954743c51061143cb586fe",
                          "typeString": "literal_string \"hats changed location\""
                        },
                        "value": "hats changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8be37b68f7e893f838f6cb121e669c0d2d80ef602a954743c51061143cb586fe",
                          "typeString": "literal_string \"hats changed location\""
                        }
                      ],
                      "id": 10197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "2663:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2663:60:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10207,
                  "nodeType": "ExpressionStatement",
                  "src": "2663:60:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2780:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "accounts_slot": {
                        "declaration": 9183,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "2787:13:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2801:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "accounts_offset": {
                        "declaration": 9183,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "2811:15:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10208,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := accounts_slot\n    offset := accounts_offset\n}",
                  "src": "2769:59:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10210,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "2846:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3132",
                            "id": 10211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2854:2:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_12_by_1",
                              "typeString": "int_const 12"
                            },
                            "value": "12"
                          },
                          "src": "2846:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10213,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "2860:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2870:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2860:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2846:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6163636f756e7473206368616e676564206c6f636174696f6e",
                        "id": 10217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2873:27:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f4cc672cb4d99cf4ce280bfa330dab0a36218bcb4ae8da6290167c677778cbb",
                          "typeString": "literal_string \"accounts changed location\""
                        },
                        "value": "accounts changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f4cc672cb4d99cf4ce280bfa330dab0a36218bcb4ae8da6290167c677778cbb",
                          "typeString": "literal_string \"accounts changed location\""
                        }
                      ],
                      "id": 10209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "2837:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2837:64:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10219,
                  "nodeType": "ExpressionStatement",
                  "src": "2837:64:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3177:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "accountStats_slot": {
                        "declaration": 9187,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "3184:17:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3202:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "accountStats_offset": {
                        "declaration": 9187,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "3212:19:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10220,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := accountStats_slot\n    offset := accountStats_offset\n}",
                  "src": "3166:67:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10222,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "3251:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3133",
                            "id": 10223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3259:2:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_13_by_1",
                              "typeString": "int_const 13"
                            },
                            "value": "13"
                          },
                          "src": "3251:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10225,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "3265:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3275:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3265:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3251:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6163636f756e745374617473206368616e676564206c6f636174696f6e",
                        "id": 10229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3278:31:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c22497b8453de0267775bf013fe1925446d2251fdca2395bd58188b7a284896b",
                          "typeString": "literal_string \"accountStats changed location\""
                        },
                        "value": "accountStats changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c22497b8453de0267775bf013fe1925446d2251fdca2395bd58188b7a284896b",
                          "typeString": "literal_string \"accountStats changed location\""
                        }
                      ],
                      "id": 10221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "3242:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:68:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10231,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:68:26"
                },
                {
                  "externalReferences": [
                    {
                      "slot": {
                        "declaration": 10047,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3367:4:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "hatStats_slot": {
                        "declaration": 9191,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "3374:13:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "offset": {
                        "declaration": 10050,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3388:6:26",
                        "valueSize": 1
                      }
                    },
                    {
                      "hatStats_offset": {
                        "declaration": 9191,
                        "isOffset": true,
                        "isSlot": false,
                        "src": "3398:15:26",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 10232,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    slot := hatStats_slot\n    offset := hatStats_offset\n}",
                  "src": "3356:59:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10234,
                            "name": "slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10047,
                            "src": "3433:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3134",
                            "id": 10235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3441:2:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_14_by_1",
                              "typeString": "int_const 14"
                            },
                            "value": "14"
                          },
                          "src": "3433:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 10237,
                            "name": "offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10050,
                            "src": "3447:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3457:1:26",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3447:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3433:25:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6861745374617473206368616e676564206c6f636174696f6e",
                        "id": 10241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3460:27:26",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36a703975ec46644537900aea28046c436d5c904dac68a108b1f2f9406414b37",
                          "typeString": "literal_string \"hatStats changed location\""
                        },
                        "value": "hatStats changed location"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36a703975ec46644537900aea28046c436d5c904dac68a108b1f2f9406414b37",
                          "typeString": "literal_string \"hatStats changed location\""
                        }
                      ],
                      "id": 10233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11288,
                        11289
                      ],
                      "referencedDeclaration": 11289,
                      "src": "3424:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3424:64:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10243,
                  "nodeType": "ExpressionStatement",
                  "src": "3424:64:26"
                }
              ]
            },
            "documentation": null,
            "id": 10245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "217:2:26"
            },
            "returnParameters": {
              "id": 10045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "232:0:26"
            },
            "scope": 10246,
            "src": "200:3295:26",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10247,
        "src": "149:3348:26"
      }
    ],
    "src": "0:3498:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-11-25T09:25:33.323Z",
  "devdoc": {
    "details": "Test RTokenStorage Layout",
    "methods": {
      "changeAllocationStrategy(address)": {
        "details": "IRToken.changeAllocationStrategy implementation"
      },
      "changeHat(uint256)": {
        "details": "IRToken.changeHat implementation"
      },
      "changeHatFor(address,uint256)": {
        "details": "IRToken.changeHatFor implementation"
      },
      "createHat(address[],uint32[],bool)": {
        "details": "IRToken.createHat implementation"
      },
      "getAccountStats(address)": {
        "details": "IRToken.getAccountStats implementation"
      },
      "getCurrentAllocationStrategy()": {
        "details": "IRToken.changeHatFor implementation"
      },
      "getCurrentSavingStrategy()": {
        "details": "IRToken.getCurrentSavingStrategy implementation"
      },
      "getGlobalStats()": {
        "details": "IRToken.getAccountStats implementation!1"
      },
      "getHatByAddress(address)": {
        "details": "IRToken.getHatByAddress implementation"
      },
      "getHatByID(uint256)": {
        "details": "IRToken.getHatByID implementation"
      },
      "getHatStats(uint256)": {
        "details": "IRToken.getHatStats implementation"
      },
      "getMaximumHatID()": {
        "details": "IRToken.getMaximumHatID implementation"
      },
      "getSavingAssetBalance()": {
        "details": "IRToken.getSavingAssetBalance implementation"
      },
      "interestPayableOf(address)": {
        "details": "IRToken.interestPayableOf implementation"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "mint(uint256)": {
        "details": "IRToken.mint implementation"
      },
      "mintWithNewHat(uint256,address[],uint32[])": {
        "details": "IRToken.mintWithNewHat implementation"
      },
      "mintWithSelectedHat(uint256,uint256)": {
        "details": "IRToken.mintWithSelectedHat implementation"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "payInterest(address)": {
        "details": "IRToken.payInterest implementation"
      },
      "receivedLoanOf(address)": {
        "details": "IRToken.receivedLoanOf implementation"
      },
      "receivedSavingsOf(address)": {
        "details": "IRToken.receivedSavingsOf implementation"
      },
      "redeem(uint256)": {
        "details": "IRToken.redeem implementation     It withdraws equal amount of initially supplied underlying assets"
      },
      "redeemAll()": {
        "details": "IRToken.redeemAll implementation"
      },
      "redeemAndTransfer(address,uint256)": {
        "details": "IRToken.redeemAndTransfer implementation"
      },
      "redeemAndTransferAll(address)": {
        "details": "IRToken.redeemAndTransferAll implementation"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferAll(address)": {
        "details": "IRToken.transferAll implementation"
      },
      "transferAllFrom(address,address)": {
        "details": "IRToken.transferAllFrom implementation"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateCode(address)": {
        "details": "Update the rToken logic contract code"
      }
    }
  },
  "userdoc": {
    "methods": {
      "allowance(address,address)": {
        "notice": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called."
      },
      "approve(address,uint256)": {
        "notice": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event."
      },
      "balanceOf(address)": {
        "notice": "Returns the amount of tokens owned by `account`."
      },
      "initialize(address,string,string,uint256)": {
        "notice": "Create rToken linked with cToken at `cToken_`"
      },
      "transfer(address,uint256)": {
        "notice": "Moves `amount` tokens from the caller's account to `dst`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event. May also emit `InterestPaid` event."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
      }
    }
  }
}